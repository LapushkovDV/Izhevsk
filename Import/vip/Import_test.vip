/*************************************************************************************************\
* Наименование: Ижевск. Импорт складов (НЕ подразделений)                                         *
* Контур/Модуль:                                                                                  *
* Примечание:                                                                                     *
*                                                                                                 *
* Вид работы  |Номер         |Дата    |Исполнитель              |Проект                           *
* ----------------------------------------------------------------------------------------------- *

\*************************************************************************************************/

const
end;
#component "GP"
Interface Import_test 'Тестирование xlreadfrommatrix';

create view
 var
  ListName   : string = 'Лист1';
    File_input
  , _strresult01
  , _strresult02
  , _strresult03
  , _strresult11
  , _strresult12
  , _strresult13 : string = '';

;


Screen scrTest;
  show at (,,, );
  Fields
    ListName   : NoProtect,{Font = {backcolor = if(ListName = '', colorneed,0);}};
    File_input : Protect, PickButton,{Font = {backcolor = if(File_input = '', colorneed,0);}};
    _strresult01 : protect;
    _strresult11 : protect;
    _strresult02 : protect;
    _strresult12 : protect;
    _strresult03 : protect;
    _strresult13 : protect;

  buttons
    cmOK,,,;
    cmCancel,,,;
<<'Test xlReadFromExcel'
`Наименование листа`.@@@@@@@@@@@@@@@@
`EXCEL Файл`.@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

           xlreadfrommatrix         |           xlGetCellValue
 .@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ | .@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
 .@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ | .@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
 .@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ | .@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

   <.Загрузить файл.>            <. Отмена .>
>>
end;

Function OpenFile(_file, _listName : string; var _bookname: string): boolean;
{

  result := false;
  xlOpenNewExcel(false);
  xlDisplayAlerts(false);


  if not(xlSetActiveWorkBookByName(_file))
     if not(xlOpenWorkBook(_file))
  {
    Message('Ошибка открытия файла ' + _file, error);

    xlCloseWorkBook(1);
    xlKillExcel;
    Stop;     abort;    exit;
  }
  If not xlIsExcelValid
  {
    message( 'Ошибка запуска EXCEL ');
    xlCloseWorkBook(1);
    xlKillExcel;
    Stop;    abort;    exit;
  }

  xlGetActiveWorkBookName(_bookname);
    XLDISPLAYALERTS(false);
  if not xlSetActiveSheetByName(_listName)
  {
    Message('Ошибка не найден лист ' + _listName, error);
    xlCloseWorkBookByName(_bookname);
    xlKillExcel;
    Stop;    abort;    exit;
  }
  result := true;
} // Functio OpenFile(_file, _listName : string) : boolean;

handleevent
cmok: {
  var _bookname: string;

  GetFileFromClient(File_input, true);
  File_input := ConvertClientPathToSrv(File_input);

  if not OpenFile(File_input, ListName, _bookname) then  {    Stop;    abort;    exit;  }

  xlSetActiveWorkBookByName(_bookname);
  xlSetActiveSheetByName(ListName);

  var r1, r2, c1, c2 : longint = 0;
  xlGetUsedRange(r1, c1, r2, c2);
  xlReadMatrixFromExcel(1, 1, r2, c2);

  xlReadFromMatrix(1, 1, _strresult01);
  xlReadFromMatrix(1, 2, _strresult02);
  xlReadFromMatrix(1, 3, _strresult03);
  xlGetCellValue(  1, 1, _strresult11);
  xlGetCellValue(  1, 2, _strresult12);
  xlGetCellValue(  1, 3, _strresult13);
  xlCloseWorkBookByName(_bookname);
  xlKillExcel;

  Rereadrecord;
}
cmpick:{
  case curfield of
   #File_input: {
      File_input := GetFileName('*.xlsx;*.xls', 'Выбор файла с данными');
    }
  end;
rereadrecord;
}
end;
end.
