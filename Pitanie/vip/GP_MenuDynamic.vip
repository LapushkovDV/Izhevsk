/*************************************************************************************************\
* Наименование: Регистрация дополнительных пунктов меню                                           *
* Контур/Модуль: *                                                                                *
* Примечание:                                                                                     *
*                                                                                                 *
* Вид работы  |Номер         |Дата    |Исполнитель              |Проект                           *
* ----------------------------------------------------------------------------------------------- *
\*************************************************************************************************/
#component "EM_IIKO"
interface GP_MenuDynamic 'Регистрация дополнительных пунктов меню' Gray;
show(20,8,80,15);

var IsClearResources:boolean;
create view
from
  X$RESOURCES
where((
  3==X$RESOURCES.XR$TYPE
));

screen ScRepParam(,,sci1Esc);
fields
  'Программа добавляет новые пункты в меню',skip,{Font={bold=true}};
  IsClearResources ('Принудительно удаляет записи с меню из X$RESOURCES',,):NoProtect;
buttons
  cmAddMenu,default,,'Добавить',,;
  cmDelMenu,,,'Удалить',,;
  cmCancel,,,'Выход',,;
<<

  .@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

    [.] Удалить все меню из системной таблицы`

 <. Добавить .>     <. Удалить .>             <. ~О~тмена  .>
>>
end;

exception ExStoreMenuHowDynamics;

procedure ClearResources;
{
  if (delete X$RESOURCES <> tsok)
    message('Ошибка удаления записи в таблице X$RESOURCES!',error);
}

HandleEvent
cmInit:{
  if (not pr_CurUserAdmin) {
    message('Программа доступна только пользователям с правами администратора.',error);
    abort;
    exit;
  }
}
cmAddMenu:{
  StartNewVisual(vtRotateVisual, vfTimer+vfBreak+vfConfirm,'Добавление новых пунктов в меню...', 0);

  if (IsClearResources) ClearResources;

  var MenuID:longint=0;
  var MenuID2:longint=0;
  _try {
    //Меню модуля "управление персоналом - сотрудники"
    MenuID:=LoadMenuEx('Z_STAFFMENU::STAFF_PSNMAINMENU',false,true);
    AddMenuItem(MenuID,'separator',1);
    AddSubMenuDynamic(MenuID,'EM_IIKO::GP_Pitanie_Menu','Питание','','');
    if (not StoreMenuHowDynamics(MenuID,'Z_STAFFMENU::STAFF_PSNMAINMENU'))
      _raise ExStoreMenuHowDynamics;

    MenuID2:=LoadMenuEx('Z_STAFFMENU::STAFF_OPERMAINMENU',false,true);
    AddMenuItem(MenuID2,'separator',1);
    AddSubMenuDynamic(MenuID2,'EM_IIKO::GP_queue_out_Menu','Очереди','','');
    if (not StoreMenuHowDynamics(MenuID2,'Z_STAFFMENU::STAFF_OPERMAINMENU'))
      _raise ExStoreMenuHowDynamics;




/*
    MenuID2:=LoadMenuEx('L_SKLAD::SklOper',false,true);
    //=====================================
    //Добавление пунктов меню модуля "Настройка - администрирование - Объединение ЭМ"
    AddMenuItem(MenuID2,'separator',1);
    AddSubMenuDynamic(MenuID2,'C_BARCODE::Shk_Menu_add_SkladOper','Штрих-кодирование','','');
    //=====================================

    //=====================================
    if (not StoreMenuHowDynamics(MenuID2,'L_SKLAD::SklOper'))
      _raise ExStoreMenuHowDynamics;
*/
    ReinitHeaderMenu;

    Message('Дополнительные пункты меню добавлены');
  }
  _except
    on ExStoreMenuHowDynamics:
      message('Ошибка выполнения StoreMenuHowDynamics',error);
    on ExVip:
      message(ExploreException,error);
  _finally {
    if (MenuID<>0) DisposeLoadMenu(MenuID);
  }

  StopVisual;
}
cmDelMenu:{
  StartNewVisual(vtRotateVisual, vfTimer+vfBreak+vfConfirm,'Удаление новых пунктов в меню...', 0);

  if (IsClearResources) ClearResources;

  _try {
    //Меню модуля "Настройка"
    DeleteMenuHowDynamics('Z_STAFFMENU::STAFF_OPERMAINMENU');
    DeleteMenuHowDynamics('Z_STAFFMENU::STAFF_PSNMAINMENU');
    ReinitHeaderMenu;

    Message('Дополнительные пункты меню удалены')
  }
  _except
    on ExVip:
      message(ExploreException,error);

  StopVisual;
}
end;

end.

GP_Pitanie_Menu Menu
{ //#3727 такой же пункт есть в УП - НПО Энергомаш - Мотивация - Настройка
   - 'Заявление на питание по пропускам', cmRunInterface('EM_IIKO::GP_ZayavPitanie'), 'Заявление на питание по пропускам',,,, scMenuCtx,,,;
   - 'Заявление на отмену питания по пропускам', cmRunInterface('EM_IIKO::GP_CancelPitanie'), 'Заявление на отмену питания по пропускам',,,, scMenuCtx,,,;
   - 'Суммы питания сотрудников по пропускам', cmRunInterface('EM_IIKO::GP_ListSumPitanie'), 'Суммы питания сотрудников по пропускам',,,, scMenuCtx,,,;
}

GP_queue_out_Menu Menu
{ //#3727 такой же пункт есть в УП - НПО Энергомаш - Мотивация - Настройка
   - 'Исходящая очередь. Записи на рассмотрении', cmRunInterface('SNG_QUE::QUE_View_QUE_EntriesForReview'), 'Записи на рассмотрении',,,, scMenuCtx,,,;
   - 'Исходящая очередь. Просмотр сообщений', cmRunInterface('EM_IIKO::showwinQUE_OUT_BR'), 'Исходящая очередь. Просмотр сообщений',,,, scMenuCtx,,,;
   - 'Исходящая очередь. Системы-получатели', cmRunInterface('SNG_QUE::QUE_RecipientSystems'), 'Исходящая очередь. Системы-получатели',,,, scMenuCtx,,,;
   - 'Исходящая очередь. Демонстрация функционала', cmRunInterface('SNG_QUE::QUE_TEST'), 'Исходящая очередь. Демонстрация функционала',,,, scMenuCtx,,,;
--------------;
   - 'Входящая очередь. Просмотр сообщений', cmRunInterface('SNG_QUE::QUE_View_QUE_INCOME'), 'Входящая очередь. Просмотр сообщений',,,, scMenuCtx,,,;
   - 'Входящая очередь. Системы-отправители', cmRunInterface('SNG_QUE::QUE_SenderSystems'), 'Входящая очередь. Системы-отправители',,,, scMenuCtx,,,;
   - 'Входящая очередь. Демонстрация функционала', cmRunInterface('SNG_QUE::QUE_INCOME_TEST'), 'Входящая очередь. Демонстрация функционала',,,, scMenuCtx,,,;
}


