/*************************************************************************************************\
* Наименование: СКУД Заявление на отсутствие                                                       *
* Контур/Модуль: Кадры                                                                            *
* Примечание:                                                                                     *
*                                                                                                 *
* Вид работы  |Номер         |Дата    |Исполнитель              |Проект                           *
* ----------------------------------------------------------------------------------------------- *

\*************************************************************************************************/
#include GetKau.vih
#include GP_ListSumPitanie.vih

#doc
Суммы питания по сотрудникам
#end
const
 coTitle = 'Суммы питания сотрудников по пропускам';
end;
//************************************************************
Interface GP_ListSumPitanie 'Суммы питания сотрудников по пропускам' (,,sci17EnEsc), EscClose;
//************************************************************
Show At (,,120,30)
//----------------------------------------
#Include ShowKau.Vpp

#include GetKau.Var
Create View
var
   cPers : Comp;
  sTitle_InterFace
 ,sTitle_Window : string;
  _mesN
 ,_YearN
 ,FilterSwitch : word;

as select
    Pitanie_sp.Nrec
  , Pitanie_sp.DAY_SUM[ 1] + Pitanie_sp.DAY_SUM[ 2] + Pitanie_sp.DAY_SUM[ 3] + Pitanie_sp.DAY_SUM[ 4] + Pitanie_sp.DAY_SUM[ 5] + Pitanie_sp.DAY_SUM[ 6]
  + Pitanie_sp.DAY_SUM[ 7] + Pitanie_sp.DAY_SUM[ 8] + Pitanie_sp.DAY_SUM[ 9] + Pitanie_sp.DAY_SUM[10] + Pitanie_sp.DAY_SUM[11] + Pitanie_sp.DAY_SUM[12]
  + Pitanie_sp.DAY_SUM[13] + Pitanie_sp.DAY_SUM[14] + Pitanie_sp.DAY_SUM[15] + Pitanie_sp.DAY_SUM[16] + Pitanie_sp.DAY_SUM[17] + Pitanie_sp.DAY_SUM[18]
  + Pitanie_sp.DAY_SUM[19] + Pitanie_sp.DAY_SUM[20] + Pitanie_sp.DAY_SUM[21] + Pitanie_sp.DAY_SUM[22] + Pitanie_sp.DAY_SUM[23] + Pitanie_sp.DAY_SUM[24]
  + Pitanie_sp.DAY_SUM[25] + Pitanie_sp.DAY_SUM[26] + Pitanie_sp.DAY_SUM[27] + Pitanie_sp.DAY_SUM[28] + Pitanie_sp.DAY_SUM[29] + Pitanie_sp.DAY_SUM[30]
  + Pitanie_sp.DAY_SUM[31] (FieldName = SumMonth)
 ,if(IsValid(tnSys_mbf),'ЗП','') (FieldName = IsZP)
From
  GP_Pitanie_sp Pitanie_sp (I_YEAR_MES)
, KatPOdr Podr
, Persons Pers
, Appointments Appoin
, Lschet LS
, PrVidopl
, KlVidUd
, Sys_mbf
where
((
    Pitanie_sp.cSys_mbf    == Sys_mbf.nrec
and Pitanie_sp.Cpersons      == Pers.nrec
//and Pitanie_sp.CPODR         == Podr.Nrec
and if(Pers.AppointCur = 0h,Pers.AppointLast,Pers.AppointCur) == Appoin.Nrec
and Appoin.CAddNrec2         == LS.nrec
))
Bounds byPers      cPers == Pers.nrec (noindex) ordered by TableOrder
Bounds byMonth     _mesN == Pitanie_sp.MESN (noindex) ordered by TableOrder
Bounds byYear     _YearN == Pitanie_sp.YEARN(noindex) ordered by TableOrder
Condition conNoZP IsZP <> 'ЗП'
;
Create view vPrvidopl
var _choice : word;
as select PrVidopl.Nrec
from Prvidopl ,SYS_MBF
where ((
     _choice == SYS_MBF.Choice
and  SYS_MBF.Nrec == Prvidopl.MNREC
))

;//Create view vPrvidopl

Parameters cPers;
file fSrc;
//******************************************************************************
// Функции
//******************************************************************************


function GetColorbySum(_sum: double): word;
{
  result := ColorSysGray;
 if _sum < 0
  then result := ColorSysBlue;
 if _sum > 0
  then result := 0
}
Procedure SetVisibleFields(_isDSK : boolean);
{
   var _curVisible: boolean;
   if _isDSK
   {
    if ReadMyDsk(_curVisible,'GP_PITANIESP_VISIBLEFIELDS_CURVISIBLE',False)
     {
       _curVisible := not _curVisible;
     }
     else
      {
        _curVisible := true;
      }
   }
   else
    {
     cfsGetProp('c_BRLISTSUMPITANIE_PITANIE_SP.DAY_SUM[1]_01','Visible',_curVisible)
    }

   var i : byte;
   for (i := 1;i<=31; i++)
   {
    cfsSetProp('c_BRLISTSUMPITANIE_PITANIE_SP.DAY_SUM['+string(i)+']_'+if(i<10,'0'+string(i),string(i)),'Visible',not _curVisible)
   }
   SaveMyDsk(not _curVisible,'GP_PITANIESP_VISIBLEFIELDS_CURVISIBLE');
}
function IsBitCTW_EM (field: word; n: word): boolean;
{  IsBitCTW_EM := (((field shr (n-1)) and word(1)) = 1);
}

Procedure ProcSetTitle;
{

  var _Str : string = coTitle;
   if BoundActive(tbbyMonth) or BoundActive(tbbyYear) or BoundActive(tbbyPers)
    {
     _Str := _Str  + '| Фильтр: ';
     if BoundActive(tbbyYear)
      {
       _Str := _Str + ' Год "' + string(_YearN)+'"'
      }

     if BoundActive(tbbyMonth)
      {
       _Str := _Str + ' Месяц "' + string(_mesN)+'"'
      }
     if BoundActive(tbbyPers)
      {
        if isValid(tnPers)
       _Str := _Str + ' Сотрудник "' + Pers.Fio+'"'
      }
    }
   cfsSetProp('GP::GP_LISTSUMPITANIE','TITLE',_Str);
}
Procedure ClearFilter;
{
   if BoundActive(tbbyMonth) Subbounds(tbbyMonth);
   if BoundActive(tbbyYear) Subbounds(tbbyYear);
   if cPers = 0h if BoundActive(tbbyPers) Subbounds(tbbyPers);

   if ConditionActiveInLeave(tcconNoZP, #Pitanie_SP)
    {
     PopConditionForLeave(tcconNoZP, #Pitanie_SP);
    }

  REREADrECORD(tnPitanie_sp);
  ProcSetTitle;
}

Procedure SetFilter;
{
  ClearFilter;
 if IsBitCTW_EM(FilterSwitch,2)
  {
   addbounds(tbbyMonth)
  }
 if IsBitCTW_EM(FilterSwitch,1)
  {
   addbounds(tbbyYear)
  }
 if getfirst Pitanie_sp <> tsOK
  {
    message('По заданному фильтру нет данных. Фильтр снят',error);
   ClearFilter
  }
  ProcSetTitle ;
  REREADrECORD(tnPitanie_sp);
}
Procedure InsertUpdate_Prvidopl (_MesnForZP, _YearForZP : word);
{
  if isvalid(tnSys_mbf) then exit;
    clearbuffer(tnPRVIDOPL);
        PRVIDOPL.MNREC    := vPrvidopl.sys_Mbf.nrec;
        PRVIDOPL.DATAN    := date(01, _MesnForZP, _YearForZP);
        PRVIDOPL.DATOK    := date(Last_day(PRVIDOPL.DATAN),_MesnForZP, _YearForZP);
        PRVIDOPL.CEX      := LS.CEX;
        PRVIDOPL.TABN     := LS.TABN;
        PRVIDOPL.STRTABN  := LS.STRTABN;
        PRVIDOPL.CLSCH    := LS.NREC;
        PRVIDOPL.TPERSON  := LS.TPERSON;
        PRVIDOPL.CEXOZ    := LS.CEX;
        PRVIDOPL.KATEG    := LS.KATEG;
        PRVIDOPL.CAPPOINT := LS.CAPPOINT;
        PRVIDOPL.VIDOPL   := 1;
        PRVIDOPL.CHOICE   := vPrvidopl.sys_Mbf.choice;
        PRVIDOPL.KOLDN    := 0;//SetKolDnAnn(PRVIDOPL.DATAN, PRVIDOPL.DATOK, GetStrTabn(PRVIDOPL.TABN,PRVIDOPL.STRTABN),LS.REJIM);
        PRVIDOPL.CHASF    := 0;//ChGrD1D2;
        PRVIDOPL.SUMMAR   := (-1)*SumMonth;
        PRVIDOPL.SUMUD    := (-1)*SumMonth;
        PRVIDOPL.SUMMA    := (-1)*SumMonth;
        PRVIDOPL.MES      := _MesnForZP;
        PRVIDOPL.CSUBSCHK := KLVIDUD.CSCHETK;
        PRVIDOPL.CSCHETK  := KLVIDUD.CSUBSCHK;
        PRVIDOPL.CKAUK[1] := KLVIDUD.CKAUK[1];
        PRVIDOPL.TBLK[1]  := KLVIDUD.TBLK[1] ;
        PRVIDOPL.CKAUK[2] := KLVIDUD.CKAUK[2];
        PRVIDOPL.TBLK[2]  := KLVIDUD.TBLK[2] ;
        PRVIDOPL.CKAUK[3] := KLVIDUD.CKAUK[3];
        PRVIDOPL.TBLK[3]  := KLVIDUD.TBLK[3] ;
        PRVIDOPL.CKAUK[4] := KLVIDUD.CKAUK[4];
        PRVIDOPL.TBLK[4]  := KLVIDUD.TBLK[4] ;
        PRVIDOPL.CKAUK[5] := KLVIDUD.CKAUK[5];
        PRVIDOPL.TBLK[5]  := KLVIDUD.TBLK[5] ;
        PRVIDOPL.CKAUK[6] := KLVIDUD.CKAUK[6];
        PRVIDOPL.TBLK[6]  := KLVIDUD.TBLK[6] ;
        PRVIDOPL.CHOZOPER := KLVIDUD.CHOZOPER;
        PRVIDOPL.VIDUD    := KLVIDUD.VIDUD   ;
      insert current PRVIDOPL;

      vPrvidopl.sys_Mbf.SUMMANC+= Prvidopl.SUMMA;
      vPrvidopl.Update current sys_Mbf;
      var i: word;
      var _lastDay: word = 31;

/* пока не буду обрабатывать данную ситуацию
      if _MesnForZP = month(Cur_date)
        then _lastDay := day(cur_date)
*/
      logstrtofile('Pitanie_sp.log','PRE FOR');
      FOR(i:=1;i<=_lastDay;i++)
      {
        Pitanie_sp.DAY_STATE[i] := 1;
        logstrtofile('Pitanie_sp.log','Pitanie_sp.DAY_STATE['+string(i)+'] := 1');
      } // признак передачи в ЗП по дням. на него опираемся когда закачиваем суммы изIIKO |может изменим
      Pitanie_sp.cSys_MBF := vPrvidopl.Sys_MBF.nrec; // признак передачи в ЗП
     update current Pitanie_sp;
}
Procedure MakeUder(_cPers : comp);
{
  var _KLVIDUD : word = 0;
  _KLVIDUD := wgettune('GP_OWN.GP_OWN.PITANIE.PITANIE_UDER') ;
  if _KLVIDUD = 0
   {
     Message('В настройке не указано удержание для питания по пропускам',error);
     exit;
   }
 set _KLVIDUD := _KLVIDUD;
 if getfirst KlVidUd where ((_KLVIDUD == KlVidUd.VIDUD))<> tsOK
 {
     Message('В настройке указано удержание '+string(_KLVIDUD)+ ' но его нет в системе',error);
     exit;
 }
 var _MesnForZP, _YearForZP : word;
 _MesnForZP := Month(dgetTune('UP.DATOTCH'));
 _YearForZP := Year(dgetTune('UP.DATOTCH'));

 ClearFilter;
 set _mesN  := _MesnForZP;
 set _YearN := _YearForZP;

 addbounds(tbbyMonth);
 addbounds(tbbyYear);

 PushConditionForLeave(tcconNoZP, #Pitanie_sp);
 set vPrvidopl._choice := 1; //текущий период
 if _cPers = 0h
 {
  if getFirst Pitanie_sp = tsOK
   {
     if(Message('Передать данные по всем сотрудникам за ' + datetostr(date(01, _MesnForZP, _YearForZP),'Month YYYY'), YesNo) <> cmYes)
     {
      exit;
     }
   }
 }
 else
 {
  if isValid(tnPers)
  {
    if date(01,Pitanie_sp.MESN,Pitanie_sp.YEARN) < date(01,_MesnForZP,_YearForZP)
     {
       Message('Нельзя передавать данные ранее: ' + datetostr(date(01, Pitanie_sp.MESN, _YearForZP),'Month YYYY'));
       exit;
     }
    if(Message('Передать данные по "'+pers.Fio+'" за ' + datetostr(date(01, Pitanie_sp.MESN, _YearForZP),'Month YYYY'), YesNo) <> cmYes)
     {
      exit;
     }
    if date(01,Pitanie_sp.MESN,Pitanie_sp.YEARN) > date(01,_MesnForZP,_YearForZP) then set vPrvidopl._choice := 89; //будущий период
  }
 }
   if ConditionActiveInLeave(tcconNoZP, #Pitanie_SP)
    {
     PopConditionForLeave(tcconNoZP, #Pitanie_SP);
    }

 ProcSetTitle;


     var  _MnRec : word;
     _MnRec:=1;
     if vPrvidopl.getlast sys_mbf = tsOK
        _MnRec := vPrvidopl.sys_mbf.MnRec + 1 ;

    vPrvidopl.ClearBuffer(vPrvidopl.tnsys_Mbf);
    vPrvidopl.sys_mbf.MnRec:=_MnRec;
    vPrvidopl.sys_Mbf.cex  := 0h;
    vPrvidopl.sys_Mbf.NMNEM :='Питание по пропускам за ' + datetostr(date(01, Pitanie_sp.MESN, _YearForZP),'Month YYYY');

    vPrvidopl.sys_Mbf.NMPODR:='все подразделения';
    vPrvidopl.sys_Mbf.DATAN:=date(1,Pitanie_sp.MESN,_yearForZP );
    vPrvidopl.sys_Mbf.DATOK:=date(Last_Day(vPrvidopl.sys_Mbf.DATAN),Pitanie_sp.MESN,_YearForZP);
    vPrvidopl.insert current sys_Mbf;
  if _cPers <> 0h
   then
    {
       InsertUpdate_Prvidopl(Pitanie_sp.MESN, Pitanie_sp.YEARN)
    }
   else
    {
     _loop Pitanie_sp
      {
       InsertUpdate_Prvidopl(_MesnForZP, _YearForZP)
      }
    }
  rereadrecord(tnPitanie_sp);
//  ClearFilter;
}

Window wnFilter 'Установите фильтры'  EscClose DoAccept;
  Show at (,,50,14);
Screen scrFilter 'Фильтры' ('Фильтры',,sci13Esc);
// Table tmpV ;
Fields
  FilterSwitch(,,sci1Esc):noProtect;
   _YearN :NoProtect,NoPickButton;
    _mesN :NoProtect,NoPickButton;
Buttons
  cmOk    , Default, , 'продолжить выполнение' , ,;
  cmClearFilter ,,, 'Снять фильтры' , , ;
  cmCancel,,, 'Отмена' , , ;
<<
        [.] Год  ` .@@@@@
        [.] Месяц` .@@@@@


  <.  OK  .>   <. Снять .>  <.Отмена.>
>>
end; //Screen scrFilter (,,sci13Esс);
HandleEvent
cmCheckField:
{
}
cmInit:
{
 set _mesN  := if(isvalid(tnPitanie_sp), Pitanie_sp.mesN,month(cur_date));
 set _YearN := if(isvalid(tnPitanie_sp), Pitanie_sp.YearN,year(cur_date));
}
cmDone:
{
}
cmOk:
{
 CloseWindowEx(wnFilter,cmDefault) ;
}
cmClearFilter:
{
 ClearFilter;
 CloseWindowEx(wnFilter,cmClose) ;
}
end;// HandleEvent
end; //Windows wnFilter 'Установите фильтры' , Cyan, EscClose;
function getpersonsbytabnmb(_tabnmb : string) : comp; cacheable; {
  result := 0h;
 if wgettune('FORMATCLOCKNUMBER') = 1 {
    if(getfirst persons where (('С' == persons.isEmployee )) and persons.strtabn = _tabnmb) = tsOK {
      result := persons.nrec;
    }
  } else {
    var _tabnmblong : longint = longint(_tabnmb);
        if(getfirst persons where (('С' == persons.isEmployee )) and persons.tabnmb = _tabnmblong) = tsOK {
         result := persons.nrec;
        }
  }
}

procedure importSumPitanieemefci(_fileinput : string); {
  GetFileFromClient(_fileinput, true);
  _fileinput := ConvertClientPathToSrv(_fileinput);

  StartNewVisual(vtRotateVisual, vfTimer, 'Он сказал поехали и махнул рукой', 1);
    _try {
      fSrc.openFile(_fileinput, stOpenRead);
// В каждой строке <дата питания>, <постоянный номер>, <табельный номер>, <код вида питания>, <сумма питания за день>, <сумма питания ночью>, <номер столовой>.
      while not fSrc.eof() do {
        var _str : string = '';
        fSrc.readLn(_str);
        _str := replace(_str,'"','');
        var _datePitanie     : date   = strtodate(extractdelimitedword(_str,1,';'),'DD.MM.YYYY'); // <дата питания>
        var _constNumber     : string = extractdelimitedword(_str,2,';'); // <постоянный номер>
        var _Tabnmb          : string = extractdelimitedword(_str,3,';'); // <табельный номер>
        var _VidPitanie      : string = extractdelimitedword(_str,4,';'); // <код вида питания>
        var _SumPitanieDay   : double = round(Double(replace(replace(extractdelimitedword(_str,5,';'),',','.'),' ','')),2); // <сумма питания за день>
        var _SumPitanieNight : double = round(Double(replace(replace(extractdelimitedword(_str,6,';'),',','.'),' ','')),2); // <сумма питания ночью>
        var _NumberStolovaya : string = extractdelimitedword(_str,7,';'); // <номер столовой>.

        var _cPersons : comp = getpersonsbytabnmb(_Tabnmb);
        if _cPersons = 0h {
          continue;
        }
        if _datePitanie = date(0,0,0) {
          continue;
        }
        if getfirst Pitanie_sp where (( year(_datePitanie) == Pitanie_sp.YEARN
                                   and month(_datePitanie) == Pitanie_sp.MESN
                                             and _cPersons == Pitanie_sp.Cpersons (noindex))) <> tsOK {
              clearbuffer(#Pitanie_sp);
              Pitanie_sp.Cpersons := _cPersons;
              Pitanie_sp.YEARN    := year(_datePitanie);
              Pitanie_sp.MESN     := month(_datePitanie);
              insert current Pitanie_sp;
          }
        if day(_datePitanie) =  1 then Pitanie_sp.DAY_SUM[ 1] := _SumPitanieDay + _SumPitanieNight;
        if day(_datePitanie) =  2 then Pitanie_sp.DAY_SUM[ 2] := _SumPitanieDay + _SumPitanieNight;
        if day(_datePitanie) =  3 then Pitanie_sp.DAY_SUM[ 3] := _SumPitanieDay + _SumPitanieNight;
        if day(_datePitanie) =  4 then Pitanie_sp.DAY_SUM[ 4] := _SumPitanieDay + _SumPitanieNight;
        if day(_datePitanie) =  5 then Pitanie_sp.DAY_SUM[ 5] := _SumPitanieDay + _SumPitanieNight;
        if day(_datePitanie) =  6 then Pitanie_sp.DAY_SUM[ 6] := _SumPitanieDay + _SumPitanieNight;
        if day(_datePitanie) =  7 then Pitanie_sp.DAY_SUM[ 7] := _SumPitanieDay + _SumPitanieNight;
        if day(_datePitanie) =  8 then Pitanie_sp.DAY_SUM[ 8] := _SumPitanieDay + _SumPitanieNight;
        if day(_datePitanie) =  9 then Pitanie_sp.DAY_SUM[ 9] := _SumPitanieDay + _SumPitanieNight;
        if day(_datePitanie) = 10 then Pitanie_sp.DAY_SUM[10] := _SumPitanieDay + _SumPitanieNight;
        if day(_datePitanie) = 11 then Pitanie_sp.DAY_SUM[11] := _SumPitanieDay + _SumPitanieNight;
        if day(_datePitanie) = 12 then Pitanie_sp.DAY_SUM[12] := _SumPitanieDay + _SumPitanieNight;
        if day(_datePitanie) = 13 then Pitanie_sp.DAY_SUM[13] := _SumPitanieDay + _SumPitanieNight;
        if day(_datePitanie) = 14 then Pitanie_sp.DAY_SUM[14] := _SumPitanieDay + _SumPitanieNight;
        if day(_datePitanie) = 15 then Pitanie_sp.DAY_SUM[15] := _SumPitanieDay + _SumPitanieNight;
        if day(_datePitanie) = 16 then Pitanie_sp.DAY_SUM[16] := _SumPitanieDay + _SumPitanieNight;
        if day(_datePitanie) = 17 then Pitanie_sp.DAY_SUM[17] := _SumPitanieDay + _SumPitanieNight;
        if day(_datePitanie) = 18 then Pitanie_sp.DAY_SUM[18] := _SumPitanieDay + _SumPitanieNight;
        if day(_datePitanie) = 19 then Pitanie_sp.DAY_SUM[19] := _SumPitanieDay + _SumPitanieNight;
        if day(_datePitanie) = 20 then Pitanie_sp.DAY_SUM[20] := _SumPitanieDay + _SumPitanieNight;
        if day(_datePitanie) = 21 then Pitanie_sp.DAY_SUM[21] := _SumPitanieDay + _SumPitanieNight;
        if day(_datePitanie) = 22 then Pitanie_sp.DAY_SUM[22] := _SumPitanieDay + _SumPitanieNight;
        if day(_datePitanie) = 23 then Pitanie_sp.DAY_SUM[23] := _SumPitanieDay + _SumPitanieNight;
        if day(_datePitanie) = 24 then Pitanie_sp.DAY_SUM[24] := _SumPitanieDay + _SumPitanieNight;
        if day(_datePitanie) = 25 then Pitanie_sp.DAY_SUM[25] := _SumPitanieDay + _SumPitanieNight;
        if day(_datePitanie) = 26 then Pitanie_sp.DAY_SUM[26] := _SumPitanieDay + _SumPitanieNight;
        if day(_datePitanie) = 27 then Pitanie_sp.DAY_SUM[27] := _SumPitanieDay + _SumPitanieNight;
        if day(_datePitanie) = 28 then Pitanie_sp.DAY_SUM[28] := _SumPitanieDay + _SumPitanieNight;
        if day(_datePitanie) = 29 then Pitanie_sp.DAY_SUM[29] := _SumPitanieDay + _SumPitanieNight;
        if day(_datePitanie) = 30 then Pitanie_sp.DAY_SUM[30] := _SumPitanieDay + _SumPitanieNight;
        if day(_datePitanie) = 31 then Pitanie_sp.DAY_SUM[31] := _SumPitanieDay + _SumPitanieNight;
        update current Pitanie_sp;

      }
    }
    _finally {
      fSrc.close;
    }

  stopvisual();
}

browse brListSumPitanie  'Суммы питания по сотрудникам' (,,sci1Esc);
Show at (,,,);
//Show at (,,,7);
Table Pitanie_sp;
Fields
  {font = {bold = (IsZP <> '')}};
  Pers.STRTABN           'Сотрудник','табельный' ('Сотрудник табельный номер')         : [8] ,Protect;
  Pers.fio               'Сотрудник','ФИО' ('Сотрудник ФИО')         : [18] ,Protect;
//  podr.Kod               'Подразделение код' ('Подразделение код') : [5] ,Protect;
  Pitanie_sp.YEARN       'Год' ('Год')        : [4] ,Protect;
  Pitanie_sp.MESN        'Месяц' ('Месяц')    : [3] , Protect;
  IsZP                   'Статус' ('пусто - текущая работа, ЗП - Передано в ЗП, + - проведена сверка с внешней системой')    : [3] , Protect;
  Pitanie_sp.DAY_SUM[ 1] '01' ('01')          : [4,'[|-]366`666`666`666`666.88'] , Protect, {Font={Color=GetColorbySum(Pitanie_sp.DAY_SUM[ 1])}};
  Pitanie_sp.DAY_SUM[ 2] '02' ('02')          : [4,'[|-]366`666`666`666`666.88'] , Protect, {Font={Color=GetColorbySum(Pitanie_sp.DAY_SUM[ 2])}};
  Pitanie_sp.DAY_SUM[ 3] '03' ('03')          : [4,'[|-]366`666`666`666`666.88'] , Protect, {Font={Color=GetColorbySum(Pitanie_sp.DAY_SUM[ 3])}};
  Pitanie_sp.DAY_SUM[ 4] '04' ('04')          : [4,'[|-]366`666`666`666`666.88'] , Protect, {Font={Color=GetColorbySum(Pitanie_sp.DAY_SUM[ 4])}};
  Pitanie_sp.DAY_SUM[ 5] '05' ('05')          : [4,'[|-]366`666`666`666`666.88'] , Protect, {Font={Color=GetColorbySum(Pitanie_sp.DAY_SUM[ 5])}};
  Pitanie_sp.DAY_SUM[ 6] '06' ('06')          : [4,'[|-]366`666`666`666`666.88'] , Protect, {Font={Color=GetColorbySum(Pitanie_sp.DAY_SUM[ 6])}};
  Pitanie_sp.DAY_SUM[ 7] '07' ('07')          : [4,'[|-]366`666`666`666`666.88'] , Protect, {Font={Color=GetColorbySum(Pitanie_sp.DAY_SUM[ 7])}};
  Pitanie_sp.DAY_SUM[ 8] '08' ('08')          : [4,'[|-]366`666`666`666`666.88'] , Protect, {Font={Color=GetColorbySum(Pitanie_sp.DAY_SUM[ 8])}};
  Pitanie_sp.DAY_SUM[ 9] '09' ('09')          : [4,'[|-]366`666`666`666`666.88'] , Protect, {Font={Color=GetColorbySum(Pitanie_sp.DAY_SUM[ 9])}};
  Pitanie_sp.DAY_SUM[10] '10' ('10')          : [4,'[|-]366`666`666`666`666.88'] , Protect, {Font={Color=GetColorbySum(Pitanie_sp.DAY_SUM[10])}};
  Pitanie_sp.DAY_SUM[11] '11' ('11')          : [4,'[|-]366`666`666`666`666.88'] , Protect, {Font={Color=GetColorbySum(Pitanie_sp.DAY_SUM[11])}};
  Pitanie_sp.DAY_SUM[12] '12' ('12')          : [4,'[|-]366`666`666`666`666.88'] , Protect, {Font={Color=GetColorbySum(Pitanie_sp.DAY_SUM[12])}};
  Pitanie_sp.DAY_SUM[13] '13' ('13')          : [4,'[|-]366`666`666`666`666.88'] , Protect, {Font={Color=GetColorbySum(Pitanie_sp.DAY_SUM[13])}};
  Pitanie_sp.DAY_SUM[14] '14' ('14')          : [4,'[|-]366`666`666`666`666.88'] , Protect, {Font={Color=GetColorbySum(Pitanie_sp.DAY_SUM[14])}};
  Pitanie_sp.DAY_SUM[15] '15' ('15')          : [4,'[|-]366`666`666`666`666.88'] , Protect, {Font={Color=GetColorbySum(Pitanie_sp.DAY_SUM[15])}};
  Pitanie_sp.DAY_SUM[16] '16' ('16')          : [4,'[|-]366`666`666`666`666.88'] , Protect, {Font={Color=GetColorbySum(Pitanie_sp.DAY_SUM[16])}};
  Pitanie_sp.DAY_SUM[17] '17' ('17')          : [4,'[|-]366`666`666`666`666.88'] , Protect, {Font={Color=GetColorbySum(Pitanie_sp.DAY_SUM[17])}};
  Pitanie_sp.DAY_SUM[18] '18' ('18')          : [4,'[|-]366`666`666`666`666.88'] , Protect, {Font={Color=GetColorbySum(Pitanie_sp.DAY_SUM[18])}};
  Pitanie_sp.DAY_SUM[19] '19' ('19')          : [4,'[|-]366`666`666`666`666.88'] , Protect, {Font={Color=GetColorbySum(Pitanie_sp.DAY_SUM[19])}};
  Pitanie_sp.DAY_SUM[20] '20' ('20')          : [4,'[|-]366`666`666`666`666.88'] , Protect, {Font={Color=GetColorbySum(Pitanie_sp.DAY_SUM[20])}};
  Pitanie_sp.DAY_SUM[21] '21' ('21')          : [4,'[|-]366`666`666`666`666.88'] , Protect, {Font={Color=GetColorbySum(Pitanie_sp.DAY_SUM[21])}};
  Pitanie_sp.DAY_SUM[22] '22' ('22')          : [4,'[|-]366`666`666`666`666.88'] , Protect, {Font={Color=GetColorbySum(Pitanie_sp.DAY_SUM[22])}};
  Pitanie_sp.DAY_SUM[23] '23' ('23')          : [4,'[|-]366`666`666`666`666.88'] , Protect, {Font={Color=GetColorbySum(Pitanie_sp.DAY_SUM[23])}};
  Pitanie_sp.DAY_SUM[24] '24' ('24')          : [4,'[|-]366`666`666`666`666.88'] , Protect, {Font={Color=GetColorbySum(Pitanie_sp.DAY_SUM[24])}};
  Pitanie_sp.DAY_SUM[25] '25' ('25')          : [4,'[|-]366`666`666`666`666.88'] , Protect, {Font={Color=GetColorbySum(Pitanie_sp.DAY_SUM[25])}};
  Pitanie_sp.DAY_SUM[26] '26' ('26')          : [4,'[|-]366`666`666`666`666.88'] , Protect, {Font={Color=GetColorbySum(Pitanie_sp.DAY_SUM[26])}};
  Pitanie_sp.DAY_SUM[27] '27' ('27')          : [4,'[|-]366`666`666`666`666.88'] , Protect, {Font={Color=GetColorbySum(Pitanie_sp.DAY_SUM[27])}};
  Pitanie_sp.DAY_SUM[28] '28' ('28')          : [4,'[|-]366`666`666`666`666.88'] , Protect, {Font={Color=GetColorbySum(Pitanie_sp.DAY_SUM[28])}};
  Pitanie_sp.DAY_SUM[29] '29' ('29')          : [4,'[|-]366`666`666`666`666.88'] , Protect, {Font={Color=GetColorbySum(Pitanie_sp.DAY_SUM[29])}};
  Pitanie_sp.DAY_SUM[30] '30' ('30')          : [4,'[|-]366`666`666`666`666.88'] , Protect, {Font={Color=GetColorbySum(Pitanie_sp.DAY_SUM[30])}};
  Pitanie_sp.DAY_SUM[31] '31' ('31')          : [4,'[|-]366`666`666`666`666.88'] , Protect, {Font={Color=GetColorbySum(Pitanie_sp.DAY_SUM[31])}};
  SumMonth 'Итого' ('Итого')                  : [5,'[|-]366`666`666`666`666.88'] , Protect, {Font={Color=GetColorbySum(SumMonth)}};
end;
  HandleEvent
    //-----------------------------
    cmInit:
    {
      ClearFuncCache;
      //--------------------------

      //--------------------------

      if cPers <> 0h
      then
      {
        addBounds(tbbyPers) ;
        if getfirst Pitanie_sp <> tsOK
         {
          message('По данному сотруднику нет данных о питании по пропускам',error);
          stop; abort; exit;
         }
      }
      SetVisibleFields(true);
      //-------------------------
      ProcSetTitle;
      if cPers <> 0h then disableCommand(cmValue1);
      ReScanPanel(#Pitanie_sp);

      if wgettune('GP_OWN.GP_OWN.PITANIE.SETUDERTOALL') <> 1 then disableCommand(cmValue1);
    }
    //-----------------------------
    cmOnVipLoad:
    { //LoadInterFace(false);
    }
    //-----------------------------
    cmDone:
    {
      //UnLoadInterFace(true);
    }
    //-----------------------------
    cmOnVipUnLoad:
    { //UnLoadInterFace(false);
    }
    //-----------------------------
    cmHotKeys:
    {
      case CurTable of
      #Pitanie_sp:
      {
        if isvalid(tnSys_mbf) then disablecommand(CmValue3);
        ProcessCommand(RunMenu('GP_ListSumPitanie_Main_HotKey_Adm'));
      }
      end;
    }
   cmValue1:
    {
       MakeUder(0h);
    }
   cmValue3:
    {
      if isValid(tnPers)
       then MakeUder(Pers.nrec);
    }

    cmFilterSave:
    {
      if RunWindowModal(wnFilter) = cmDefault SetFilter;
    }
    cmValue2:
    {
      SetVisibleFields(false);
    }
   cmValue4:
    {
      var File_input : string = GetFileName('*.csv;', 'Выбор файла с суммами питания');
      importSumPitanieemefci(File_input);
      rereadrecord;
      //ProcessText(File_input, vfEscable or vfNewTitle or vfMacroSize, 'Импорт данных для эМэФСи');
      //putfiletoclient(File_input, false);
    }

   cmValue5:
    {
      message('IIKO');
    }

  end;

end.
GP_ListSumPitanie_Main_HotKey_Adm Menu
{
- 'Фильтр на данные' , cmFilterSave, 'Фильтр на данные', hcProc_NagrKaf, 'Alt+B',kbAltB, scMenuCtx;
 -----------;
- 'Показать/Скрыть суммы по дням', cmValue2, 'Показать/Скрыть суммы по дням',  ,'',,sci1Esc;
 -----------;
- 'Передать суммы питания в ЗП по текущему сотруднику', cmValue3, 'Передать суммы питания как удержание в ЗП текущему сотруднику',  ,'',,sci1Esc;
- 'Передать суммы питания в ЗП по всем', cmValue1, 'Передать суммы питания как удержание в ЗП по всем',  ,'',,sci1Esc;
 -----------;
- 'Загрузить суммы питания из эМэФСи', cmValue4, 'Загрузить суммы питания из эМэФСи',  ,'',,sci1Esc;
- 'Загрузить суммы питания из IIKO',   cmValue5, 'Загрузить суммы питания из IIKO',    ,'',,sci1Esc;


}
