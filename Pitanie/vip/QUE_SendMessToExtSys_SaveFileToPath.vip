
/*************************************************************************************************\
* Наименование: Выбор адреса по иерархии                                                          *
* Контур/Модуль: Абстрактный конструктор JSON                                                     *
* Примечание:                                                                                     *
*                                                                                                 *
* Вид работы  |Номер         |Дата    |Исполнитель              |Проект                           *
* ----------------------------------------------------------------------------------------------- *

\*************************************************************************************************/
/*
вот такой JSON отсылаем в Галактику
 "action":"atmcall"
  , "jsonrpc":"2.0"
  , "id":3
  , "class": "SNG_QUE::QUE_REST"
  , "method": "oQUE_REST_PutMessageToIncomeQueue"
  , "params":{"body": "тут наш JSON перекодированный в base64"
            , "isbase64":true
            , "system_code":"KATKAUSPKAU"
            }


*/
#component 'SNG_QUE'
#include QUE_SendMessToExtSys.vih
#include QUE_BASE.vih
#include QUE_INCOME_BASE.vih
//************************************************************

vipinterface QUE_SendMessToExtSys_SaveFileToPath implements oQUE_SendMessToExtSys
  Licensed(free);

Interface QUE_SendMessToExtSys_SaveFileToPath;

create view
var _cQUE_Handler_tune : comp;
    iQUE_BASE : QUE_BASE;

    logenable : boolean = false;
as select
 Handler_tune.VALUEWORD[1] (fieldname = Encoding)
from
  QUE_Handler_tune Handler_tune
where ((
       _cQUE_Handler_tune == Handler_tune.nrec
      ))
;


function GetProhibitSymbol(_name : string) : string; {
 result := '';

 if pos('\', _name) <> 0 then result := '\';
 if pos('/', _name) <> 0 then result := '/';
 if pos(':', _name) <> 0 then result := ':';
 if pos('*', _name) <> 0 then result := '*';
 if pos('?', _name) <> 0 then result := '?';
 if pos('"', _name) <> 0 then result := '"';
 if pos('<', _name) <> 0 then result := '<';
 if pos('>', _name) <> 0 then result := '>';
 if pos('|', _name) <> 0 then result := '|';
 if pos('+', _name) <> 0 then result := '+';
 if pos('%', _name) <> 0 then result := '%';
 if pos('!', _name) <> 0 then result := '!';
 if pos('@', _name) <> 0 then result := '@';

/*
    \ - разделитель подкаталогов
    / - разделитель ключей командного интерпретатора
    : - отделяет букву диска или имя альтернативного потока данных
    * - заменяющий символ (маска <любое количество любых символов>)
    ? - заменяющий символ (маска <один любой символ>)
    " - используется для указания путей, содержащих пробелы
    < - перенаправление ввода
    > - перенаправление вывода
    | - обозначает конвейер
    + - (в различных версиях) конкатенация
    % - в Windows используется для подстановки переменных окружения в интерпретаторе команд, вызывает проблемы при открытии файла через стандартный диалог открытия файла;
    ! - в Windows используется для подстановки переменных окружения в интерпретаторе команд, в bash используется для доступа к истории[1];
    @ - в интерпретаторах команд вызывает срабатывание функций, предназначенных для почты.
*/
}

function GetFileName(_name : string) : string; {
 result := _name;
 result := replace( result, '%YEAR%'  , string(Year(cur_date)));
 result := replace( result, '%MONTH%' , string(Month(cur_date)));
 result := replace( result, '%DAY%'   , string(day(cur_date)));
 result := replace( result, '%HOUR%'  , TimeToStr(Cur_Time,'HH'));
 result := replace( result, '%MINUTE%', TimeToStr(Cur_Time,'MM'));
 result := replace( result, '%SECOND%', TimeToStr(Cur_Time,'SS'));
}


function SendMessage(_cQueue : comp; _bodyMessage : TpTr; _InstanceCode: string; _typeEvent: string; __cQUE_Handler_tune : comp; var _retStatus, _retFileLog: string) : boolean; {

 result := false;
 var iQUE_BASE : QUE_BASE new;

 set _cQUE_Handler_tune := __cQUE_Handler_tune;

// message('Galaktika')
 if getfirst Handler_tune <> tsOK {
    _retFileLog := '';
    _retStatus  := 'Не найдена настройка QUE_Handler_tune.nrec=' + string(__cQUE_Handler_tune);
    exit;
 }

 var _FolderPath : string = trim(Handler_tune.VALUESTRING[1]);
 var _filename   : string = trim(Handler_tune.VALUESTRING[2]);
 var _Encoding   : word   = Handler_tune.VALUEWORD[1];

 if _FolderPath = '' {
    _retFileLog := '';
    _retStatus  := 'В настройке не указана папка выгрузки';
    exit;
 }
 if _Encoding = 0 {
    _retFileLog := '';
    _retStatus  := 'В настройке не указана кодировка выгрузки';
    exit;
 }
 if _filename = '' {
    _retFileLog := '';
    _retStatus  := 'В настройке не указано имя файла выгрузки';
    exit;
 }

 if GetProhibitSymbol(_filename) <> '' {
    _retFileLog := '';
    _retStatus  := 'В настройке указано имя файла с запрещенным символом ' + GetProhibitSymbol(Handler_tune.VALUESTRING[2]);
    exit;
 }



 if not( substr(_FolderPath,length(_FolderPath),1) = '\'
      or substr(_FolderPath,length(_FolderPath),1) = '/'
       ) {
  _FolderPath := _FolderPath + '\'
 }

 var httpCon: TPtr = HttpConnect_CreateEx('ya.ru', '', '', True);

   _retFileLog := iQUE_BASE.GenerateNewFile +'__bodymess.txt' ;

   var _FileLog : tptr = HttpConnect_CreateLongString(httpCon);

  HttpConnect_AddValueToLongString (httpCon,'Папка ' + _FolderPath + ''#13'', _FileLog);
  HttpConnect_AddValueToLongString (httpCon,'Имя файла' + _filename   + ''#13'', _FileLog);
  HttpConnect_AddValueToLongString (httpCon,'Кодировка' + String(_Encoding) + ''#13'', _FileLog);


 if not HttpConnect_SaveToFileEx(httpCon, _bodyMessage, _FolderPath + _filename, _Encoding, false) {
    HttpConnect_AddValueToLongString (httpCon,'Не удалось сохранить файл ' + _FolderPath + _filename, _FileLog);
    HttpConnect_SaveToFileEx(httpCon, _FileLog, _retFileLog, cpUTF8, false);
    _retStatus  := 'Не удалось сохранить файл ' + _FolderPath + _filename;
    HttpConnect_Free(httpCon);
    exit;
 }
    HttpConnect_AddValueToLongString (httpCon,'SAVE OK ', _FileLog);
    HttpConnect_SaveToFileEx(httpCon, _FileLog, _retFileLog, cpUTF8, false);
    _retStatus  := 'Сохранено успешно';
  HttpConnect_Free(httpCon);

  result := true;
}

function GetDescription : string; {
  result := 'Сохранение файла из текста сообщения'
}


/*
866 CP 866
1200 Unicode
1201 Unicode Big Endian
1251 CP 1251
20127 US-ASCII
65000 UTF-7
65001 UTF-8

*/
Window winSaveFileTune 'Настройки интерфейса сохранения файла';
  Show at (,,,);
  //---------------------------------------------
    Screen scrSaveFileTune(,,Sci1Esc);

    Table Handler_tune;
    Fields
     Handler_tune.NAME           : NoProtect, {Font={BackColor=if(trim(Handler_tune.name) = '',ColorNeed,0)}};
     Handler_tune.VALUESTRING[1] : NoProtect, {Font={BackColor=if(trim(Handler_tune.VALUESTRING[1]) = '',ColorNeed,0)}};
     Handler_tune.VALUESTRING[2] : NoProtect, {Font={BackColor=if(trim(Handler_tune.VALUESTRING[2]) = '',ColorNeed,0)}};
     Encoding   : [LIST ''] , Protect; //,{Font={BackColor=if(Handler_tune.VALUEWORD[1] = 0,ColorNeed,0)}};
     GetFileName(Handler_tune.VALUESTRING[2])                 : Skip;

     if(GetProhibitSymbol(GetFileName(Handler_tune.VALUESTRING[2])) = ''
       ,''
       ,'В наименовании файла есть запрещенный символ ' + GetProhibitSymbol(GetFileName(Handler_tune.VALUESTRING[2])) ) : SKIP,{Font={Color=ColorError}};
    buttons
     cmValue1,[singleLine],,;
<<
`Наименование настройки`.@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

 `Путь выгрузки файла`.@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
  `маска наименования`.@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
     `Кодировка файла`.@@@@@@@@@@@@@@@@@@@@@@

 `Итоговое наименование файла`.@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
      .@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
В маске можно использовать следующие макроподстановки, которые будут вычисляться в момент выгрузки:
  %YEAR%   - год
  %MONTH%  - месяц
  %DAY%    - день
  %HOUR%   - час
  %MINUTE% - минута
  %SECOND% - секунда

                           <.Сохранить и закрыть.>
>>
    end;
end;
windowevent winSaveFileTune;
cminit : {
  Var strArray : Array[0..0] Of String;
 Var wrdArray : Array[0..0] Of Word;
 Var j        : LongInt;

 SetLimit(strArray, 0);
 SetLimit(wrdArray, 0);

 j:=0;                                              wrdArray[j] := 866; strArray[j]   := 'CP 866';
 j++; SetLimit(strArray, j); SetLimit(wrdArray, j); wrdArray[j] := 1200 ; strArray[j] := '1200 Unicode'           ;
 j++; SetLimit(strArray, j); SetLimit(wrdArray, j); wrdArray[j] := 1201 ; strArray[j] := '1201 Unicode Big Endian';
 j++; SetLimit(strArray, j); SetLimit(wrdArray, j); wrdArray[j] := 1251 ; strArray[j] := '1251 CP 1251'           ;
 j++; SetLimit(strArray, j); SetLimit(wrdArray, j); wrdArray[j] := 20127; strArray[j] := '20127 US-ASCII'         ;
 j++; SetLimit(strArray, j); SetLimit(wrdArray, j); wrdArray[j] := 65000; strArray[j] := '65000 UTF-7'            ;
 j++; SetLimit(strArray, j); SetLimit(wrdArray, j); wrdArray[j] := 65001; strArray[j] := '65001 UTF-8'            ;


 SetEnumList(scrSaveFileTune, fnEncoding, strArray, wrdArray);
 //Set tipDocOper := wrdArray[0];
}
cmValue1 : {
  update current Handler_tune;
  closewindow(winSaveFileTune);
}
end;

procedure Setup(__cQUE_Handler_tune : comp); {
  set _cQUE_Handler_tune := __cQUE_Handler_tune;
  if getfirst Handler_tune <> tsOK then exit;
  runwindowmodal(winSaveFileTune)

}

handleevent

cmCheckField : {
  update current Handler_tune;
  rereadrecord;
}
end;
end.
