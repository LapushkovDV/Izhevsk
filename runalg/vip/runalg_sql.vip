/*************************************************************************************************\
* Наименование: Ведение телефонного справочника                                                   *
* Контур/Модуль: Кадры                                                                            *
* Примечание:                                                                                     *
*                                                                                                 *
* Вид работы  |Номер         |Дата    |Исполнитель              |Проект                           *
* ----------------------------------------------------------------------------------------------- *

\*************************************************************************************************/

const
end;
#include Query.vih
#include objintpl.vin
#include runalg_sql.vih

#component "M_MnPlan"

Interface runalg_sql 'Импорт плана';
create view
var _logFile : string = '';
as select
 mnplan.nrec
from
   mnplan
 , mnplan snmnplan
 , BUFSPPLAM
 , objacct
 , spmnplan
 , spmnpl
 , valspmnp
 , WayAccou
;

procedure MyLog(_log : string); {
  if _logFile = '' then _logFile := GetStringParameter('Files', 'OutputFilesDirectory', 0) + 'runalg_sql_'+DateToStr(Cur_date, 'YYYYMMDD') + '_' + timetostr(Cur_time, 'HH.MM.SS') + '_' + UserName + '.log';
  logstrtofile(_logFile,DateToStr(Cur_date, 'YYYYMMDD') + '_' + timetostr(Cur_time, 'HH.MM.SS') +'| ' +_log);
}


function GetLastNumMnPlan(TypePlan : word) : string;{
  GetLastNumMnPlan := '00000';

  if ( GetLast snMnPlan where (( TypePlan == snMnPlan.TypePlan ))
                                     ordered by snMnPlan.Number = tsOK )
  {
    GetLastNumMnPlan := NextNumStr(snMnPlan.Number);
  }
}
function InsertMNPLan(_typePlan : word; _cWayAccou : comp) : comp; {
  if getfirst WayAccou where ((_cWayAccou == WayAccou.nrec)) <> tsOK then exit;
  var iSetPl : SetupMnf;
  if (not GetVipRef(iSetPl, 'GetNastr'))
  {
    Message('Системная ошибка !!!' +
            'Не загружен интерфейс <' + 'GetNastr' + '>', Error);
    Abort;
    Exit;
  }
  var GlDt        : GlobData;
  if (NullVipRef(GlDt))
   if (Not GetVipRef (GlDt,'GlobDataSource'))
   {
    Message('Системная ошибка !!!'+
            'Не загружен интерфейс <' + 'GlobDataSource' +'>', Error);
    Abort;
    Exit;
   }

  var insTbl : InsertTblMnpl;

  insTbl := gldt.GetInsertTblMnPl();

  var stMnPlan : TMnPlan;
  if (Not iSetPl.InitAll(_cWayAccou)) {
    Exit;
  }

    ClearAdvRecord(stMnPlan);

    stMnPlan.cSloj     := iSetPl.GetLinkGr;       //ссылка на группу аналитик
    stMnPlan.TypePlan  := _typePlan;             //тип документа
    stMnPlan.cWayAccou := _cWayAccou;                   //ссылка на шаблон документа
    stMnPlan.Name      := mnplan.name + ' | ' +WayAccou.name+' | '+datetostr(Cur_date, 'YYYYMMDD')+'_'+TimeToStr(Cur_Time,'HHMMSS');

    stMnPlan.LastTime  := Cur_Time;
    stMnPlan.LastDate  := Cur_Date;
    stMnPlan.LastUser  := UserName;
    stMnPlan.Descr     := sGetTune('User.Descr');
    stMnPlan.DesGr     := sGetTune('User.DesGr');
    stMnPlan.Number    := GetLastNumMnPlan(_typePlan);

    stMnPlan.cRoleAn1  := iSetPl.GetKatRoleNRec(1);   //ссылки на роли аналитик (1..5)
    stMnPlan.cRoleAn2  := iSetPl.GetKatRoleNRec(2);
    stMnPlan.cRoleAn3  := iSetPl.GetKatRoleNRec(3);
    stMnPlan.cRoleAn4  := iSetPl.GetKatRoleNRec(4);
    stMnPlan.cRoleAn5  := iSetPl.GetKatRoleNRec(5);

    stMnPlan.wKodGr1   := iSetPl.GetLinkTbl(1);    //коды элементарных аналитик
    stMnPlan.wKodGr2   := iSetPl.GetLinkTbl(2);
    stMnPlan.wKodGr3   := iSetPl.GetLinkTbl(3);
    stMnPlan.wKodGr4   := iSetPl.GetLinkTbl(4);
    stMnPlan.wKodGr5   := iSetPl.GetLinkTbl(5);

    if (Not InsTbl.InsertMnPlan(stMnPlan)) {
      message('Ошибка вставки MNPLAN');
    } else {
       //message('stMnPlan.nrec = ' + string(stMnPlan.nrec,0,0));
       result := stMnPlan.nrec;

       insert objacct set
          objacct.typeown := stMnPlan.TypePlan
        , objacct.cOwner  := stMnPlan.nrec
        , objacct.kindrec := 1
        , objacct.typeobj := 4
        , objacct.cObject := mnplan.nrec
        , objacct.condrec := 1
       ;
    }

}

Procedure MysqlAddStr(var query_handle: longInt; add_query_str: string); {
   sqlAddStr(query_handle, add_query_str);
   MyLog('sql: ' + add_query_str);
} //Function MysqlAddStr(var query_handle: longInt; add_query_str: string): longInt;

procedure Run0(__cMnPlan : comp); {
  set _logFile := '';
 StartNewVisual(vtRotateVisual, vfBreak+vfTimer,'Всем оставаться на месте! Работает СУБД 0_о' , 1);
 MyLog('Старт алгоритма');
 if getfirst mnplan where ((__cMnPlan == mnplan.nrec)) <> tsOK then exit;

 var _guid : string = olegenerateguid;
 var stmt: longInt = 0;
  stmt := sqlAllocStmt;
//  SqlExecStmt(stmt, 'aaa3()');

  var sql_str : string = 'bufSpPlam(#comp('+string(__cMnPlan)+'), '''+_guid+ ''' )';
//  message(sql_str);
  MyLog('выполнение запроса'+sql_str);
  sqlPrepare(stmt, sql_str);

  if sqlExecute(stmt) = tsOk {
     if getfirst BUFSPPLAM where ((_guid == BUFSPPLAM.sRas)) = tsOK {
     } else {
        //message('Нет записей BUFSPPLAM', error);
          MyLog('ОШИБКА!Нет записей BUFSPPLAM');
       if VisualizationActive then stopvisual;
      exit;
     }
   } else {
    //message('error sqlExecute(stmt)', error);
    MyLog('ОШИБКА!error sqlExecute(stmt)');
    if VisualizationActive then stopvisual;
    exit;
   }
  sqlFreeStmt(stmt);
   MyLog('Запрос выполнен');

   var _cMaterRes  : comp = InsertMNPLan(37, 0000000000000012h); // // потребность в матер ресурсах внутреннее производство деталей
   if _cMaterRes = 0h then {
       if VisualizationActive then stopvisual;
       exit;
     }
   var _cPLanSnab1 : comp = InsertMNPLan(29, 000000000000008Dh); // // план снабжения потребность в материалах
   if _cPLanSnab1 = 0h then {
       if VisualizationActive then stopvisual;
       exit;
     }
   var _cPLanSnab2 : comp = InsertMNPLan(29, 0000000000000042h); // // план снабжения внешняя поставка деталей
   if _cPLanSnab2 = 0h then {
       if VisualizationActive then stopvisual;
       exit;
     }
   var _npp0, _npp1, _npp2, _npp3 : longint = 0;

  SetVisualheader('Удаление нулевых записей');

  MyLog('Старт. Удаление нулевых записей');

  stmt := sqlAllocStmt;
  sql_str := 'delete from BUFSPPLAM where sRas = '''+_guid+ ''' and (BUFSPPLAM.KOL = 0 or BUFSPPLAM.tPlan = 0)';
//  message(sql_str);
  MyLog('выполнение запроса '+sql_str);
  sqlPrepare(stmt, sql_str);

  if sqlExecute(stmt) != tsOk  {
    //message('error sqlExecute(stmt)', error);
    MyLog('ОШИБКА! error sqlExecute(stmt)');
    if VisualizationActive then stopvisual;
    exit;
   }
   sqlFreeStmt(stmt);

//  delete BUFSPPLAM where ((_guid == BUFSPPLAM.sRas)) and (BUFSPPLAM.KOL = 0 or BUFSPPLAM.tPlan = 0);

  MyLog('Окончание. Удаление нулевых записей');
  SetVisualheader('Подсчет количества записей');
  MyLog('Старт. Подсчет количества записей');
  _loop BUFSPPLAM where ((_guid == BUFSPPLAM.sRas)) {
      _npp0++;
    }
  MyLog('Окончание. Подсчет количества записей. Количество = ' + string(_npp0));
  if VisualizationActive then stopvisual;

  StartNewVisual(vtIndicatorVisual , vfTimer + vfBreak, 'определение ошибок',_npp0);
  _npp0 := 0;
//   var _cMaterRes : comp = InsertMNPLan(37, 0000000000000012h); // // потребность в матер ресурсах внутреннее производство деталей
  SetVisualheader('Формирование документов');
  MyLog('Старт. Формирование документов');

  var _kol0, stmt1,stmt2,stmt3 : longint = 0;

  var usedsql : boolean = False;

  _loop BUFSPPLAM where ((_guid == BUFSPPLAM.sRas)) {

     if not nextvisual then {
         if VisualizationActive then stopvisual;
         break;
       }

/*
    if _npp0 mod 647 = 0 {
         setvisualheader('Формирование документов'+
         +''#13'' + 'Строк обработано ' + string(_npp0));
       }
*/
    if BUFSPPLAM.KOL = 0 then continue;

    if BUFSPPLAM.tPlan = 1 and _cMaterRes = 0h then continue;
    if BUFSPPLAM.tPlan = 2 and _cPLanSnab1 = 0h then continue;
    if BUFSPPLAM.tPlan = 3 and _cPLanSnab2 = 0h then continue;


     if _kol0 > 5 and usedsql = True {
       _kol0 := 0;
        MyLog('выполнение запроса вставки записей stmt1 _npp0 =' + string(_npp0));
        MyLog('result = '+sqlExecDirect(stmt1));
        //sqlFreeStr(stmt1);
        stmt1 :=0;

        MyLog('выполнение запроса вставки записей stmt2');
        MyLog('result = '+sqlExecDirect(stmt2));
        //sqlFreeStr(stmt2);
        stmt2 :=0;

        MyLog('выполнение запроса вставки записей stmt3');
        MyLog('result = '+sqlExecDirect(stmt3));
        //sqlFreeStr(stmt3);
        stmt3 :=0;

        MyLog('Окончание. выполнение запроса ');
     }
    _kol0++;
    _npp0++;
     case BUFSPPLAM.tPlan of
      1: {
         _npp1++;
         if not usedsql {
                 Insert SpMnPlan set
                     SpMnPlan.cMnPLan  := _cMaterRes
                   , SpMnPlan.NUMBER   := LpadCH(string(_npp1),'0',6)
                   , SpMnPlan.WKODGR2  := 2
                   , SpMnPlan.CROLEAN2 := 400078471786BBA3h
                   , SpMnPlan.CANVAL2  := BUFSPPLAM.CPOTR
                   , SpMnPlan.WKODGR3  := 2
                   , SpMnPlan.CROLEAN3 := 4000C4657C3679DDh
                   , SpMnPlan.CANVAL3  := BUFSPPLAM.CIZG
                   , SpMnPlan.WKODGR4  := 20001
                   , SpMnPlan.CROLEAN4 := 000000000000001Dh
                   , SpMnPlan.CANVAL4  := BUFSPPLAM.MODEL
                   , SpMnPlan.WKODGR5  := 10
                   , SpMnPlan.CROLEAN5 := 4000BBA8150F0B6Ah
                   , SpMnPlan.CANVAL5  := BUFSPPLAM.VIDPROD
                   , SpMnPlan.EDTIME   := 1
                   , SpMnPlan.TYPEIZD  := 1
                   , SpMnPlan.CIZD     := BUFSPPLAM.CMC
                   , SpMnPlan.cOtpEd   := BUFSPPLAM.COTPED
                   , SpMnPlan.cRoleIzd := 400020974FA419FEh
                   , SpMnPlan.CSLOJ    := 0000000000000007h
                  ;
                 Insert SpMnPl set
                     SpMnPl.cMnPLan   := _cMaterRes
                   , SpMnPl.NUMBER    := LpadCH(string(_npp1),'0',6)
                   , SpMnPl.WKODGR2   := 2
                   , SpMnPl.CROLEAN2  := 400078471786BBA3h
                   , SpMnPl.CANVAL2   := BUFSPPLAM.CPOTR
                   , SpMnPl.WKODGR3   := 2
                   , SpMnPl.CROLEAN3  := 4000C4657C3679DDh
                   , SpMnPl.CANVAL3   := BUFSPPLAM.CIZG
                   , SpMnPl.WKODGR4   := 27
                   , SpMnPl.CROLEAN4  := 400054F07BE14D49h
                   , SpMnPl.CANVAL4   := 0000000000000002h
                   , SpMnPl.WKODGR5   := 10
                   , SpMnPl.CROLEAN5  := 4000BBA8150F0B6Ah
                   , SpMnPl.CANVAL5   := BUFSPPLAM.VIDPROD
                   , SpMnPl.EDTIME    := 1
                   , SpMnPl.TYPEIZD   := 1
                   , SpMnPl.STARTDATE := BUFSPPLAM.DT
                   , SpMnPl.ENDDATE   := BUFSPPLAM.DT
                   , SpMnPl.RECOMDATE := BUFSPPLAM.DT
                   , SpMnPl.CSPMNPLAN := SpMnPlan.nrec
                   , SpMnPl.cMnAnal   := 0000000000000007h
                   , SpMnPl.wKolAn    := 52
                   , SpMnPl.cRoleIzd  := 400020974FA419FEh
                   , SpMnPl.CSLOJ     := 0000000000000006h
                   , SpMnPl.WKODGR8   := 20001
                   , SpMnPl.CROLEAN8  := 000000000000001Dh
                   , SpMnPl.CANVAL8   := BUFSPPLAM.MODEL
                   , SpMnPl.WKODGR9   := 10
                   , SpMnPl.CROLEAN9  := 4000BBA8150F0B6Ah
                   , SpMnPl.CANVAL9   := BUFSPPLAM.VIDPROD
                  ;
                 Insert valspmnp set
                     valspmnp.CSPMNPL       := SpMnPl.nrec
                   , valspmnp.num           := _npp1
                   , valspmnp.EDTIME        := 1
                   , valspmnp.KOL           := BUFSPPLAM.KOL
                   , valspmnp.TYPEFIELD[1]  := 1
                   , valspmnp.TYPEFIELD[2]  := 1
                   , valspmnp.TYPEFIELD[3]  := 1
                   , valspmnp.TYPEFIELD[4]  := 1
                   , valspmnp.TYPEFIELD[5]  := 1
                   , valspmnp.TYPEFIELD[6]  := 1
                   , valspmnp.TYPEFIELD[7]  := 1
                   , valspmnp.TYPEFIELD[8]  := 1
                   , valspmnp.TYPEFIELD[9]  := 1
                   , valspmnp.TYPEFIELD[10] := 1
                   , valspmnp.TYPEFIELD[11] := 1
                   , valspmnp.TYPEFIELD[12] := 1
                   , valspmnp.TYPEFIELD[13] := 1
                   , valspmnp.TYPEFIELD[14] := 1
                  ;
           }  else {
             var _cspmnplan : comp = getnextnrec(tnSpMnPlan, 0);
              MysqlAddStr(stmt1, 'Insert into SpMnPlan (nrec, cMnPLan, NUMBER, WKODGR2, CROLEAN2, CANVAL2, WKODGR3, CROLEAN3, CANVAL3, WKODGR4');
              MysqlAddStr(stmt1, '   , CROLEAN4, CANVAL4, WKODGR5, CROLEAN5, CANVAL5, EDTIME, TYPEIZD, CIZD, cOtpEd, cRoleIzd, CSLOJ)');
              MysqlAddStr(stmt1, '   values');
              MysqlAddStr(stmt1, '  (#comp('+string(_cspmnplan)+'),#comp('+string(_cMaterRes)+'), '''+LpadCH(string(_npp1),'0',6)+'''' );
               MysqlAddStr(stmt1, '  ,2, #comp(400078471786BBA3h),#comp('+string(BUFSPPLAM.CPOTR)+'),2,#comp(4000C4657C3679DDh),#comp('+string(BUFSPPLAM.CIZG)+')');
               MysqlAddStr(stmt1, '  ,20001,#comp(000000000000001Dh),#comp('+string(BUFSPPLAM.MODEL)+'),10,#comp(4000BBA8150F0B6Ah),#comp('+string(BUFSPPLAM.VIDPROD)+')');
               MysqlAddStr(stmt1, '  ,1,1,#comp('+string(BUFSPPLAM.CMC)+'),#comp('+string(BUFSPPLAM.COTPED)+'),#comp(400020974FA419FEh),#comp(0000000000000007h)) ');
               MysqlAddStr(stmt1, 'GO');
             var _cspmnpl : comp = getnextnrec(tnSpMnPl, 0);
              mysqlAddStr(stmt2, 'Insert into SpMnPl (nrec,  cMnPLan, NUMBER, WKODGR2, CROLEAN2, CANVAL2, WKODGR3, CROLEAN3, CANVAL3, WKODGR4, CROLEAN4, CANVAL4');
              mysqlAddStr(stmt2, '  , WKODGR5, CROLEAN5, CANVAL5, EDTIME, TYPEIZD, STARTDATE, ENDDATE, RECOMDATE, CSPMNPLAN, cMnAnal, wKolAn, cRoleIzd, CSLOJ');
              mysqlAddStr(stmt2, '  , WKODGR8, CROLEAN8, CANVAL8, WKODGR9, CROLEAN9, CANVAL9)');
              MysqlAddStr(stmt2, '   values');
               mysqlAddStr(stmt2, '   (#comp('+string(_cspmnpl)+'),comp('+string(_cMaterRes)+'),'''+LpadCH(string(_npp1),'0',6)+''',2,#comp(400078471786BBA3h)');
               mysqlAddStr(stmt2, '  ,#comp('+string(BUFSPPLAM.CPOTR)+'),2,#comp(4000C4657C3679DDh),#comp('+string(BUFSPPLAM.CIZG)+'),27,#comp(400054F07BE14D49h)');
               mysqlAddStr(stmt2, '  ,#comp(0000000000000002h),10,#comp(4000BBA8150F0B6Ah),#comp('+string(BUFSPPLAM.VIDPROD)+'),1,1,#date(' + datetostr(BUFSPPLAM.DT,'DD,MM,YYYY')+')');
               mysqlAddStr(stmt2, '  ,#date(' + datetostr(BUFSPPLAM.DT,'DD,MM,YYYY')+'),#date(' + datetostr(BUFSPPLAM.DT,'DD,MM,YYYY')+'),#comp('+string(_cspmnplan)+')');
               mysqlAddStr(stmt2, '  ,#comp(0000000000000007h),52,#comp(400020974FA419FEh), #comp(0000000000000006h),20001,#comp('+string(BUFSPPLAM.MODEL)+'),#comp('+string(BUFSPPLAM.MODEL)+')');
               mysqlAddStr(stmt2, '  ,10,#comp(4000BBA8150F0B6Ah),#comp('+string(BUFSPPLAM.VIDPROD)+'))');

              mysqlAddStr(stmt3, 'Insert into valspmnp (CSPMNPL, num, EDTIME, KOL, TYPEFIELD[1], TYPEFIELD[2], TYPEFIELD[3], TYPEFIELD[4], TYPEFIELD[5], TYPEFIELD[6]');
              mysqlAddStr(stmt3, '  , TYPEFIELD[7], TYPEFIELD[8], TYPEFIELD[9], TYPEFIELD[10], TYPEFIELD[11], TYPEFIELD[12], TYPEFIELD[13], TYPEFIELD[14]) ');
              MysqlAddStr(stmt3, '   values ');
               mysqlAddStr(stmt3, '   ( #comp('+string(_cspmnpl)+ '),'''+string(_npp1)+''',1,'+string(BUFSPPLAM.KOL)+',1,1,1,1,1,1,1,1,1,1,1,1,1,1)');
           }

      }
      2: {
           _npp2++;
           if not usedsql {
              Insert SpMnPlan set
                 SpMnPlan.cMnPLan  := _cPLanSnab1
               , SpMnPlan.NUMBER   := LpadCH(string(_npp2),'0',6)
               , SpMnPlan.WKODGR1  := 10
               , SpMnPlan.CROLEAN1 := 4000BBA8150F0B6Ah
               , SpMnPlan.CANVAL1  := BUFSPPLAM.VIDPROD
               , SpMnPlan.WKODGR2  := 2
               , SpMnPlan.CROLEAN2 := 400078471786BBA3h
               , SpMnPlan.CANVAL2  := BUFSPPLAM.CPOTR
               , SpMnPlan.WKODGR3  := 2
               , SpMnPlan.CROLEAN3 := 4000C4657C3679DDh
               , SpMnPlan.CANVAL3  := BUFSPPLAM.CIZG
               , SpMnPlan.WKODGR4  := 20001
               , SpMnPlan.CROLEAN4 := 000000000000001Dh
               , SpMnPlan.CANVAL4  := BUFSPPLAM.MODEL
               , SpMnPlan.EDTIME   := 1
               , SpMnPlan.TYPEIZD  := 1
               , SpMnPlan.CIZD     := BUFSPPLAM.CMC
               , SpMnPlan.cOtpEd   := BUFSPPLAM.COTPED
               , SpMnPlan.cRoleIzd := 400020974FA419FEh
               , SpMnPlan.CSLOJ    := 0000000000000007h
              ;
             Insert SpMnPl set
                 SpMnPl.cMnPLan   := _cPLanSnab1
               , SpMnPl.NUMBER    := LpadCH(string(_npp2),'0',6)
               , SpMnPl.WKODGR1   := 10
               , SpMnPl.CROLEAN1  := 4000BBA8150F0B6Ah
               , SpMnPl.CANVAL1   := BUFSPPLAM.VIDPROD
               , SpMnPl.WKODGR2   := 2
               , SpMnPl.CROLEAN2  := 400078471786BBA3h
               , SpMnPl.CANVAL2   := BUFSPPLAM.CPOTR
               , SpMnPl.WKODGR3   := 2
               , SpMnPl.CROLEAN3  := 4000C4657C3679DDh
               , SpMnPl.CANVAL3   := BUFSPPLAM.CIZG
               , SpMnPl.WKODGR4   := 27
               , SpMnPl.CROLEAN4  := 400054F07BE14D49h
               , SpMnPl.CANVAL4   := 0000000000000002h
               , SpMnPl.EDTIME    := 1
               , SpMnPl.TYPEIZD   := 1
               , SpMnPl.STARTDATE := BUFSPPLAM.DT
               , SpMnPl.ENDDATE   := BUFSPPLAM.DT
               , SpMnPl.RECOMDATE := BUFSPPLAM.DT
               , SpMnPl.CSPMNPLAN := SpMnPlan.nrec
               , SpMnPl.cMnAnal   := 0000000000000007h
               , SpMnPl.wKolAn    := 52
               , SpMnPl.cRoleIzd  := 400020974FA419FEh
               , SpMnPl.CSLOJ     := 0000000000000006h
               , SpMnPl.WKODGR8   := 20001
               , SpMnPl.CROLEAN8  := 000000000000001Dh
               , SpMnPl.CANVAL8   := BUFSPPLAM.MODEL
              ;
             Insert valspmnp set
                 valspmnp.CSPMNPL       := SpMnPl.nrec
               , valspmnp.num           := _npp2
               , valspmnp.EDTIME        := 1
               , valspmnp.KOL           := BUFSPPLAM.KOL
               , valspmnp.TYPEFIELD[1]  := 1
               , valspmnp.TYPEFIELD[2]  := 1
               , valspmnp.TYPEFIELD[3]  := 1
               , valspmnp.TYPEFIELD[4]  := 1
               , valspmnp.TYPEFIELD[5]  := 1
               , valspmnp.TYPEFIELD[6]  := 1
               , valspmnp.TYPEFIELD[7]  := 1
               , valspmnp.TYPEFIELD[8]  := 1
               , valspmnp.TYPEFIELD[9]  := 1
               , valspmnp.TYPEFIELD[10] := 1
               , valspmnp.TYPEFIELD[11] := 1
               , valspmnp.TYPEFIELD[12] := 1
               , valspmnp.TYPEFIELD[13] := 1
               , valspmnp.TYPEFIELD[14] := 1
              ;
              } else {

              }

      }
      3: {
           _npp3++;
           if not usedsql {
                Insert SpMnPlan set
                   SpMnPlan.cMnPLan  := _cPLanSnab2
                 , SpMnPlan.NUMBER   := LpadCH(string(_npp3),'0',6)
                 , SpMnPlan.WKODGR1  := 10
                 , SpMnPlan.CROLEAN1 := 4000BBA8150F0B6Ah
                 , SpMnPlan.CANVAL1  := BUFSPPLAM.VIDPROD
                 , SpMnPlan.WKODGR2  := 1
                 , SpMnPlan.CROLEAN2 := 4000C4657C3679DDh
                 , SpMnPlan.CANVAL2  := BUFSPPLAM.CIZG
                 , SpMnPlan.WKODGR3  := 2
                 , SpMnPlan.CROLEAN3 := 400078471786BBA3h
                 , SpMnPlan.CANVAL3  := BUFSPPLAM.CPOTR
                 , SpMnPlan.WKODGR4  := 20001
                 , SpMnPlan.CROLEAN4 := 000000000000001Dh
                 , SpMnPlan.CANVAL4  := BUFSPPLAM.MODEL
                 , SpMnPlan.EDTIME   := 1
                 , SpMnPlan.TYPEIZD  := 1
                 , SpMnPlan.CIZD     := BUFSPPLAM.CMC
                 , SpMnPlan.cOtpEd   := BUFSPPLAM.COTPED
                 , SpMnPlan.cRoleIzd := 400020974FA419FEh
                 , SpMnPlan.CSLOJ    := 0000000000000007h
                ;
               Insert SpMnPl set
                   SpMnPl.cMnPLan   := _cPLanSnab2
                 , SpMnPl.NUMBER    := LpadCH(string(_npp3),'0',6)
                 , SpMnPl.WKODGR1   := 10
                 , SpMnPl.CROLEAN1  := 4000BBA8150F0B6Ah
                 , SpMnPl.CANVAL1   := BUFSPPLAM.VIDPROD
                 , SpMnPl.WKODGR2   := 1
                 , SpMnPl.CROLEAN2  := 4000C4657C3679DDh
                 , SpMnPl.CANVAL2   := BUFSPPLAM.CIZG
                 , SpMnPl.WKODGR3   := 2
                 , SpMnPl.CROLEAN3  := 400078471786BBA3h
                 , SpMnPl.CANVAL3   := BUFSPPLAM.CPOTR
                 , SpMnPl.WKODGR4   := 27
                 , SpMnPl.CROLEAN4  := 400054F07BE14D49h
                 , SpMnPl.CANVAL4   := 0000000000000002h
                 , SpMnPl.EDTIME    := 1
                 , SpMnPl.TYPEIZD   := 1
                 , SpMnPl.STARTDATE := BUFSPPLAM.DT
                 , SpMnPl.ENDDATE   := BUFSPPLAM.DT
                 , SpMnPl.RECOMDATE := BUFSPPLAM.DT
                 , SpMnPl.CSPMNPLAN := SpMnPlan.nrec
                 , SpMnPl.cMnAnal   := 0000000000000007h
                 , SpMnPl.wKolAn    := 52
                 , SpMnPl.cRoleIzd  := 400020974FA419FEh
                 , SpMnPl.CSLOJ     := 0000000000000006h
                 , SpMnPl.WKODGR8   := 20001
                 , SpMnPl.CROLEAN8  := 000000000000001Dh
                 , SpMnPl.CANVAL8   := BUFSPPLAM.MODEL
                ;
               Insert valspmnp set
                   valspmnp.CSPMNPL       := SpMnPl.nrec
                 , valspmnp.num           := _npp3
                 , valspmnp.EDTIME        := 1
                 , valspmnp.KOL           := BUFSPPLAM.KOL
                 , valspmnp.TYPEFIELD[1]  := 1
                 , valspmnp.TYPEFIELD[2]  := 1
                 , valspmnp.TYPEFIELD[3]  := 1
                 , valspmnp.TYPEFIELD[4]  := 1
                 , valspmnp.TYPEFIELD[5]  := 1
                 , valspmnp.TYPEFIELD[6]  := 1
                 , valspmnp.TYPEFIELD[7]  := 1
                 , valspmnp.TYPEFIELD[8]  := 1
                 , valspmnp.TYPEFIELD[9]  := 1
                 , valspmnp.TYPEFIELD[10] := 1
                 , valspmnp.TYPEFIELD[11] := 1
                 , valspmnp.TYPEFIELD[12] := 1
                 , valspmnp.TYPEFIELD[13] := 1
                 , valspmnp.TYPEFIELD[14] := 1
                ;
              } else {

              }
      }
     end;
  }
        MyLog('после цикла');
      if _kol0 > 10 and usedsql = True {
       _kol0 := 0;
        MyLog('выполнение запроса вставки записей stmt1 _npp0 =' + string(_npp0));
        sqlExecDirect(stmt1);
        sqlFreeStr(stmt1);
        stmt1 :=0;

        MyLog('выполнение запроса вставки записей stmt2');
        sqlExecDirect(stmt2);
        sqlFreeStr(stmt2);
        stmt2 :=0;

        MyLog('выполнение запроса вставки записей stmt3');
        sqlExecDirect(stmt3);
        sqlFreeStr(stmt3);
        stmt3 :=0;

        MyLog('Окончание. выполнение запроса ');
     }



  MyLog('Окончание. Формирование документов');
  SetVisualheader('Очищение временных данных');
  MyLog('Старт. Очищение временных данных');
  delete BUFSPPLAM where ((_guid == BUFSPPLAM.sRas));
  MyLog('Окончание. Очищение временных данных');
  if VisualizationActive then stopvisual;
}
procedure Run1(__cMnPlan : comp); {
  set _logFile := '';
 StartNewVisual(vtRotateVisual, vfBreak+vfTimer,'Всем оставаться на месте! Работает СУБД 0_о' , 1);
 MyLog('Старт алгоритма');
 if getfirst mnplan where ((__cMnPlan == mnplan.nrec)) <> tsOK then exit;

   var _cMaterRes  : comp = InsertMNPLan(37, 0000000000000012h); // // потребность в матер ресурсах внутреннее производство деталей
   if _cMaterRes = 0h then {
       if VisualizationActive then stopvisual;
       exit;
     }
   var _cPLanSnab1 : comp = InsertMNPLan(29, 000000000000008Dh); // // план снабжения потребность в материалах
   if _cPLanSnab1 = 0h then {
       if VisualizationActive then stopvisual;
       exit;
     }
   var _cPLanSnab2 : comp = InsertMNPLan(29, 0000000000000042h); // // план снабжения внешняя поставка деталей
   if _cPLanSnab2 = 0h then {
       if VisualizationActive then stopvisual;
       exit;
     }


 var _guid : string = olegenerateguid;
 var stmt: longInt = 0;
  stmt := sqlAllocStmt;
//  SqlExecStmt(stmt, 'aaa3()');

  var sql_str : string = 'bufSpPlam2(#comp('+string(__cMnPlan)+'), #comp('+string(_cMaterRes)+'),#comp('+string(_cPLanSnab1)+'),#comp('+string(_cPLanSnab2)+'))';
//  message(sql_str);
  MyLog('выполнение запроса'+sql_str);
  sqlPrepare(stmt, sql_str);

  if sqlExecute(stmt) != tsOk {
    //message('error sqlExecute(stmt)', error);
    MyLog('ОШИБКА!error sqlExecute(stmt)');
    if VisualizationActive then stopvisual;
    exit;
   }
  sqlFreeStmt(stmt);
  MyLog('Запрос выполнен');
  if VisualizationActive then stopvisual;
  if VisualizationActive then stopvisual;

}

procedure Run(__cMnPlan : comp); {
  set _logFile := '';
 StartNewVisual(vtRotateVisual, vfBreak+vfTimer,'Всем оставаться на месте! Работает СУБД 0_о' , 1);
 MyLog('Старт алгоритма');
 if getfirst mnplan where ((__cMnPlan == mnplan.nrec)) <> tsOK then exit;

 var _guid : string = olegenerateguid;
 var stmt: longInt = 0;
  stmt := sqlAllocStmt;
//  SqlExecStmt(stmt, 'aaa3()');

  var sql_str : string = 'bufSpPlam(#comp('+string(__cMnPlan)+'), '''+_guid+ ''' )';
//  message(sql_str);
  MyLog('выполнение запроса'+sql_str);
  sqlPrepare(stmt, sql_str);

  if sqlExecute(stmt) = tsOk {
     if getfirst BUFSPPLAM where ((_guid == BUFSPPLAM.sRas)) = tsOK {
     } else {
        //message('Нет записей BUFSPPLAM', error);
          MyLog('ОШИБКА!Нет записей BUFSPPLAM');
       if VisualizationActive then stopvisual;
      exit;
     }
   } else {
    //message('error sqlExecute(stmt)', error);
    MyLog('ОШИБКА!error sqlExecute(stmt)');
    if VisualizationActive then stopvisual;
    exit;
   }
  sqlFreeStmt(stmt);
   MyLog('Запрос выполнен');

   var _cMaterRes  : comp = InsertMNPLan(37, 0000000000000012h); // // потребность в матер ресурсах внутреннее производство деталей
   MyLog('_cMaterRes = ' + string(_cMaterRes,0,0));
   if _cMaterRes = 0h then {
       if VisualizationActive then stopvisual;
       exit;
     }
   var _cPLanSnab1 : comp = InsertMNPLan(29, 000000000000008Dh); // // план снабжения потребность в материалах
   MyLog('_cPLanSnab1 = ' + string(_cPLanSnab1,0,0));
   if _cPLanSnab1 = 0h then {
       if VisualizationActive then stopvisual;
       exit;
     }
   var _cPLanSnab2 : comp = InsertMNPLan(29, 0000000000000042h); // // план снабжения внешняя поставка деталей
   MyLog('_cPLanSnab2 = ' + string(_cPLanSnab2,0,0));
   if _cPLanSnab2 = 0h then {
       if VisualizationActive then stopvisual;
       exit;
     }
   var _npp0, _npp1, _npp2, _npp3 : longint = 0;

  SetVisualheader('Удаление нулевых записей');

  MyLog('Старт. Удаление нулевых записей');

  stmt := sqlAllocStmt;
  sql_str := 'delete from BUFSPPLAM where sRas = '''+_guid+ ''' and (BUFSPPLAM.KOL = 0 or BUFSPPLAM.tPlan = 0)';
//  message(sql_str);
  MyLog('выполнение запроса '+sql_str);
  sqlPrepare(stmt, sql_str);

  if sqlExecute(stmt) != tsOk  {
    //message('error sqlExecute(stmt)', error);
    MyLog('ОШИБКА! error sqlExecute(stmt)');
    if VisualizationActive then stopvisual;
    exit;
   }
   sqlFreeStmt(stmt);
  MyLog('Окончание. Удаление нулевых записей');
  SetVisualheader('Вставка SPMNPLAN/ BUFSPPLAM.sRas = '''+_guid+''' and BUFSPPLAM.tPlan = 1 ');
  stmt := 0;
  MysqlAddStr(stmt, 'Insert into SpMnPlan (cMnPLan, NUMBER, WKODGR2, CROLEAN2, CANVAL2, WKODGR3, CROLEAN3, CANVAL3, WKODGR4');
  MysqlAddStr(stmt, '   , CROLEAN4, CANVAL4, WKODGR5, CROLEAN5, CANVAL5, EDTIME, TYPEIZD, CIZD, cOtpEd, cRoleIzd, CSLOJ)');
  MysqlAddStr(stmt, '   Select distinct');
  MysqlAddStr(stmt, '  #comp('+string(_cMaterRes)+'), ''0'' ' );
  MysqlAddStr(stmt, '  ,2, #comp(400078471786BBA3h),BUFSPPLAM.CPOTR,2,#comp(4000C4657C3679DDh),BUFSPPLAM.CIZG');
  MysqlAddStr(stmt, '  ,20001,#comp(000000000000001Dh),BUFSPPLAM.MODEL,10,#comp(4000BBA8150F0B6Ah),BUFSPPLAM.VIDPROD');
  MysqlAddStr(stmt, '  ,1,1,BUFSPPLAM.CMC,BUFSPPLAM.COTPED,#comp(400020974FA419FEh),#comp(0000000000000007h) ');
  MysqlAddStr(stmt, '  from BUFSPPLAM where BUFSPPLAM.sRas = '''+_guid+''' and BUFSPPLAM.tPlan = 1 ');

  MyLog('выполнение запроса BUFSPPLAM.tPlan = 2');
  MyLog('result = '+sqlExecDirect(stmt));

  sqlFreeStmt(stmt);
  SetVisualheader('Вставка SPMNPLAN/ BUFSPPLAM.sRas = '''+_guid+''' and BUFSPPLAM.tPlan = 2 ');
  stmt := 0;
  MysqlAddStr(stmt, 'insert into SPMNPLAN (cMnPLan, NUMBER, WKODGR1, CROLEAN1, CANVAL1, WKODGR2, CROLEAN2, CANVAL2, WKODGR3, CROLEAN3, CANVAL3');
  MysqlAddStr(stmt, '                       ,WKODGR4, CROLEAN4, CANVAL4, EDTIME, TYPEIZD, CIZD, cOtpEd, cRoleIzd, CSLOJ   )');
  MysqlAddStr(stmt, 'Select distinct');
  MysqlAddStr(stmt, '  #comp('+string(_cPLanSnab1)+'), ''0'' ' );
  MysqlAddStr(stmt, '  ,10, #comp(4000BBA8150F0B6Ah), BUFSPPLAM.VIDPROD, 2, #comp(400078471786BBA3h), BUFSPPLAM.CPOTR, 2, #comp(4000C4657C3679DD), BUFSPPLAM.CIZG,20001,#comp(000000000000001Dh)');
  MysqlAddStr(stmt, '  , BUFSPPLAM.MODEL, 1, 1, BUFSPPLAM.CMC, BUFSPPLAM.COTPED, #comp(400020974FA419FEh), #comp(0000000000000007h)');
  MysqlAddStr(stmt, '  from BUFSPPLAM where  BUFSPPLAM.sRas = '''+_guid+''' and BUFSPPLAM.tPlan = 2 ');

  MyLog('выполнение запроса BUFSPPLAM.tPlan = 2');
  MyLog('result = '+sqlExecDirect(stmt));

  sqlFreeStmt(stmt);
  SetVisualheader('Вставка SPMNPLAN/ BUFSPPLAM.sRas = '''+_guid+''' and BUFSPPLAM.tPlan = 3 ');
  stmt := 0;
  MysqlAddStr(stmt, 'insert into SPMNPLAN (cMnPLan, NUMBER, WKODGR1, CROLEAN1, CANVAL1, WKODGR2, CROLEAN2, CANVAL2, WKODGR3, CROLEAN3');
  MysqlAddStr(stmt,'                       ,CANVAL3, WKODGR4, CROLEAN4, CANVAL4, EDTIME, TYPEIZD, CIZD, cOtpEd, cRoleIzd, CSLOJ   )');
  MysqlAddStr(stmt, 'Select distinct');
  MysqlAddStr(stmt, '  #comp('+string(_cPLanSnab2)+'), ''0'' ' );
  MysqlAddStr(stmt, '  ,10,#comp(4000BBA8150F0B6Ah),BUFSPPLAM.VIDPROD,1,4000C4657C3679DDh, BUFSPPLAM.CIZG, 2,400078471786BBA3h,BUFSPPLAM.CPOTR,20001,400000000000001Dh');
  MysqlAddStr(stmt, '  , BUFSPPLAM.MODEL,1,1,BUFSPPLAM.CMC, BUFSPPLAM.COTPED, #comp(400020974FA419FEh), #comp(0000000000000007h)');
  MysqlAddStr(stmt, '  from BUFSPPLAM where BUFSPPLAM.sRas = '''+_guid+''' and BUFSPPLAM.tPlan = 3 ');

  MyLog('выполнение запроса BUFSPPLAM.tPlan = 3');
  MyLog('result = '+sqlExecDirect(stmt));

  sqlFreeStmt(stmt);
  stmt := 0;
//  delete BUFSPPLAM where ((_guid == BUFSPPLAM.sRas)) and (BUFSPPLAM.KOL = 0 or BUFSPPLAM.tPlan = 0);




  MyLog('Окончание. Формирование документов');
  SetVisualheader('Очищение временных данных');
  MyLog('Старт. Очищение временных данных');
//  delete BUFSPPLAM where ((_guid == BUFSPPLAM.sRas));
  MyLog('Окончание. Очищение временных данных');
  if VisualizationActive then stopvisual;
}
end.
