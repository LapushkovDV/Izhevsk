#include interactive_report.vih

#component "M_MnPlan"
Interface interactive_report 'Интерактивный отчет по плану - рабочее место снабженца';


table struct tMcOrgPodr (
   cMC    : comp
 , cOrg   : comp
 , cPodr  : comp
// , cParty : comp
// , cModel : comp
)
with index (
 ind0 = cMC
)
;

table struct tMcOrgPodrClaim (
    cmc          : comp
  , corg         : comp
  , cpodr        : comp
  , ZakazNumber  : string
  , zakazDate    : date
  , KolZakaz     : double
  , KolZakazAvto : double
)
with index (
 ind0 = cmc + corg + cpodr
)
;
table struct tColumn (
   cMC : comp
)
with index (
 ind0 = cMC
)
;
table struct tMcOrgPodrClaimAvto (
    cmc     : comp
  , corg    : comp
  , cpodr   : comp
  , ZakazNumber : string
  , ZakazNumberAvto : string
  , KolZakazAvto : double
)
with index (
 ind0 = cmc + corg + ZakazNumber
);

table struct tMcOrgPodrPlanKol (
    cmc      : comp
  , corg     : comp
  , cpodr    : comp
  , plandate : date
  , PlanKol  : double
)
with index (
 ind0 = cmc + corg + PLANDATE
);
function getplankol(_cmc, _corg, _cpodr : comp; _date : date) : double; forward;
create view
 var
   _cMnPlan : comp;
   _dBeg : date;
  _LineReport : byte;

  _needPodr : word = 0;

   mid
 , fMarkermc
 , fMarkerOrg
 , fMarkerkodplan    : longint;
   _fmc
 , _forg
 , _fkodplan : string;

  _needmacros : boolean = false;

   pMarkerMC: IMarker(marker) new;
   pMarkerOrg: IMarker(marker) new;
   pMarkerkodplan: IMarker(marker) new;
as select
  getplankol(tMcOrgPodrPlanKol.cmc, tMcOrgPodrPlanKol.corg,tMcOrgPodrPlanKol.cpodr, add_day(_dBeg,0))  (fieldname = valueday0)
, getplankol(tMcOrgPodrPlanKol.cmc, tMcOrgPodrPlanKol.corg,tMcOrgPodrPlanKol.cpodr, add_day(_dBeg,1))  (fieldname = valueday1)
, getplankol(tMcOrgPodrPlanKol.cmc, tMcOrgPodrPlanKol.corg,tMcOrgPodrPlanKol.cpodr, add_day(_dBeg,2))  (fieldname = valueday2)
, getplankol(tMcOrgPodrPlanKol.cmc, tMcOrgPodrPlanKol.corg,tMcOrgPodrPlanKol.cpodr, add_day(_dBeg,3))  (fieldname = valueday3)
, getplankol(tMcOrgPodrPlanKol.cmc, tMcOrgPodrPlanKol.corg,tMcOrgPodrPlanKol.cpodr, add_day(_dBeg,4))  (fieldname = valueday4)
, getplankol(tMcOrgPodrPlanKol.cmc, tMcOrgPodrPlanKol.corg,tMcOrgPodrPlanKol.cpodr, add_day(_dBeg,5))  (fieldname = valueday5)
, getplankol(tMcOrgPodrPlanKol.cmc, tMcOrgPodrPlanKol.corg,tMcOrgPodrPlanKol.cpodr, add_day(_dBeg,6))  (fieldname = valueday6)
, getplankol(tMcOrgPodrPlanKol.cmc, tMcOrgPodrPlanKol.corg,tMcOrgPodrPlanKol.cpodr, add_day(_dBeg,7))  (fieldname = valueday7)
, getplankol(tMcOrgPodrPlanKol.cmc, tMcOrgPodrPlanKol.corg,tMcOrgPodrPlanKol.cpodr, add_day(_dBeg,8))  (fieldname = valueday8)
, getplankol(tMcOrgPodrPlanKol.cmc, tMcOrgPodrPlanKol.corg,tMcOrgPodrPlanKol.cpodr, add_day(_dBeg,9))  (fieldname = valueday9)
from
   MnPlan
 , SpMnPlan
 , SpMnPl
 , KatMC
 , ValSpMnP
 , spkau Model
 , KatOrg
 , KatParty
 , KatPodr
 , KatPodr KatPodr_cllaim
 , attrnam AN_MC
 , attrval AV_MC
 , spkau KodPlanPostavk
 , normas
 , Marsh_SP
 , Marsh_SP Marsh_SP_Next


 , tMcOrgPodr
 , tMcOrgPodrClaim
 , tMcOrgPodr      tMcOrgPodr_1
 , tMcOrgPodrClaim tMcOrgPodrClaim_1
 , tMcOrgPodrClaimAvto
 , tMcOrgPodrClaimAvto tMcOrgPodrClaimAvto_1
 , tMcOrgPodrPlanKol
 , tMcOrgPodrPlanKol tMcOrgPodrPlanKol_1
 , tMcOrgPodrPlanKol tMcOrgPodrPlanKol_2


where ((         tMcOrgPodr.cMc   == KatMc.Nrec
           and  tMcOrgPodr.cOrg   == KatOrg.nrec
           and  tMcOrgPodr.cPodr  == katPodr.nrec
//           and  tMcOrgPodr.cParty == KatParty.nrec
//           and  tMcOrgPodr.cModel == Model.nrec
           and tMcOrgPodr.cmc   == tMcOrgPodrClaim.cmc
           and tMcOrgPodr.corg  == tMcOrgPodrClaim.corg

           and tMcOrgPodrClaim.cpodr == KatPodr_cllaim.nrec

           and tMcOrgPodrClaim.cmc  == tMcOrgPodrClaimAvto.cmc
           and tMcOrgPodrClaim.corg == tMcOrgPodrClaimAvto.corg
           and tMcOrgPodrClaim.ZakazNumber == tMcOrgPodrClaimAvto.ZakazNumber

           and tMcOrgPodr.cMc  == tMcOrgPodrPlanKol.cmc
           and tMcOrgPodr.cOrg == tMcOrgPodrPlanKol.corg
      ))
bounds byPodr      tMcOrgPodr.cpodr == tMcOrgPodrClaim.cpodr (noindex)
          and tMcOrgPodrClaim.cpodr == tMcOrgPodrClaimAvto.cpodr (noindex)
          and     tMcOrgPodr.cPodr  == tMcOrgPodrPlanKol.cpodr (noindex)
;

function getplankol(_cmc, _corg, _cpodr : comp; _date : date) : double;  cacheable; {
  result := 0;
  if getfirst  tMcOrgPodrPlanKol_2 where  ((_cmc == tMcOrgPodrPlanKol_2.cmc
                                      and  _corg == tMcOrgPodrPlanKol_2.corg
                                      and  _date == tMcOrgPodrPlanKol_2.plandate
                                          )) = tsOK
              and if(_needPodr = 0, true, tMcOrgPodrPlanKol_2.cpodr = _cpodr) {
      result := tMcOrgPodrPlanKol_2.planKol;
    }
}

procedure filltmpTable; {
  if _dBeg = 0 then exit;
 StartNewVisual(vtRotateVisual, vfBreak+vfTimer,'Он сказал поехали и махнул рукой' , 1);
 setvisualheader('Очистка временных таблиц');

 delete all tMcOrgPodr_1;
 delete all tMcOrgPodrClaim_1;
 delete all tMcOrgPodrClaimAvto_1;
 delete all tMcOrgPodrPlanKol_1;
 var dateBeg : date = _dBeg;
 var dateEnd : date = add_day(_dBeg,30);

  setvisualheader('Заполнение tMcOrgPodr');
      _Try
      {
         SQL
           select distinct
              SpMnPlan.cIzd    as cMC
             ,SpMnPlan.CANVAL2 as cOrg
             , case when 1 = :(_needPodr) then SpMnPlan.CANVAL3 else #comp(0) end as cPodr
//             ,SpMnPlan.CANVAL1 as cParty
//             ,SpMnPlan.CANVAL4 as cModel
           From spmnplan
          where SpMnPlan.cMnPlan = :(_cMnPlan)
          into tMcOrgPodr;
      }
      _Except
      else{
      }
  setvisualheader('Заполнение tMcOrgPodrClaim');
      _Try
      {
        sql
        select
            tspmnplan.cMc  as cmc
          , tspmnplan.corg as corg
          , tspmnplan.cPodr as cpodr
          , claim.name     as ZakazNumber
          , indent.dPlan   as zakazDate
          , sum(claim.kol) as KolZakaz
          , sum(SpObjAcc.kolcpos) as KolZakazAvto
        from (
         select distinct
                      SpMnPlan.cIzd    as cMC
                     ,SpMnPlan.CANVAL2 as cOrg
                     ,SpMnPlan.CANVAL3 as cPodr
                     ,SpMnPl.STARTDATE as startdate
                   From spmnplan
                     join spmnpl on spmnpl.cspmnplan = SpMnPlan.nrec
                                and SpMnPl.STARTDATE >= :(dateBeg)
                                and SpMnPl.STARTDATE <= :(dateEnd)

                  where SpMnPlan.cMnPlan = :(_cMnPlan)
        ) tspmnplan
        join katmc on katmc.nrec = tspmnplan.cmc
        join Indent on Indent.itis = 1
                and Indent.iam = 0
                and Indent.cOrder = tspmnplan.cPodr
                and Indent.cPerform = tspmnplan.corg
                and Indent.dPlan = tspmnplan.startdate
        join claim on Claim.cIndent = Indent.nrec
                and Claim.prmc = 1
                and Claim.cmcusl = tspmnplan.cmc
        left join SpObjAcc on SpObjAcc.typepos = 13
                          and SpObjAcc.typeHier = 0
                          and SpObjAcc.cPos = claim.nrec
        left join ObjAcct on ObjAcct.nrec = SpObjAcc.cObjAcct
                         and ObjAcct.TypeOwn = 112
        left join KatZak on KatZak.nrec = ObjAcct.cowner

        group by tspmnplan.cmc, indent.dPlan, claim.name, tspmnplan.corg, tspmnplan.cPodr
        into tMcOrgPodrClaim;
      }
      _Except
      else{
      }
     setvisualheader('Заполнение tMcOrgPodrClaimAvto');
      _Try
      {
          sql
          select
              tspmnplan.cMc   as cmc
            , tspmnplan.corg  as corg
            , tspmnplan.cPodr as cpodr
            , indent.dPlan    as zakazDate
            , claim.name      as ZakazNumber
            , KatZak.NomZak   as ZakazNumberAvto
            , sum(SpObjAcc.kolcpos) as KolZakazAvto
          from (
           select distinct
                        SpMnPlan.cIzd    as cMC
                       ,SpMnPlan.CANVAL2 as cOrg
                       ,SpMnPlan.CANVAL3 as cPodr
                       ,SpMnPl.STARTDATE as startdate
                     From spmnplan
                     join spmnpl on spmnpl.cspmnplan = SpMnPlan.nrec
                             and SpMnPl.STARTDATE >= :(dateBeg)
                             and SpMnPl.STARTDATE <= :(dateEnd)
                  where SpMnPlan.cMnPlan = :(_cMnPlan)
          ) tspmnplan
          join katmc on katmc.nrec = tspmnplan.cmc
          join Indent on Indent.itis = 1
                  and Indent.iam = 0
                  and Indent.cOrder = tspmnplan.cPodr
                  and Indent.cPerform = tspmnplan.corg
                and Indent.dPlan = tspmnplan.startdate
          join claim on Claim.cIndent = Indent.nrec
                  and Claim.prmc = 1
                  and Claim.cmcusl = tspmnplan.cmc
          join SpObjAcc on SpObjAcc.typepos = 13
                            and SpObjAcc.typeHier = 0
                            and SpObjAcc.cPos = claim.nrec
          join ObjAcct on ObjAcct.nrec = SpObjAcc.cObjAcct
                           and ObjAcct.TypeOwn = 112
          join KatZak on KatZak.nrec = ObjAcct.cowner
          group by tspmnplan.cmc, indent.dPlan, claim.name, tspmnplan.corg, tspmnplan.cPodr,KatZak.NomZak
        into tMcOrgPodrClaimAvto;
      }
      _Except
      else{
      }

  setvisualheader('Заполнение tMcOrgPodrPlanKol');
      _Try
      {
         sql
          select
              SpMnPlan.cIzd    as cmc
            , SpMnPlan.CANVAL2 as corg
            , SpMnPlan.CANVAL3 as cpodr
            , spmnpl.startdate as plandate
            , sum(valspmnp.kol) as PlanKol
            From spmnplan
             join spmnpl on spmnpl.cspmnplan = SpMnPlan.nrec
                       and SpMnPl.STARTDATE >= #date(01,01,2024)
                      and SpMnPl.STARTDATE <= #date(31,12,2024)
             join valspmnp on valspmnp.cspmnpl = spmnpl.nrec
           where SpMnPlan.cMnPlan = #comp(281474976711369)
          group by SpMnPlan.cIzd
            , SpMnPlan.CANVAL2, SpMnPlan.CANVAL3
            , spmnpl.startdate
        into tMcOrgPodrPlanKol;
      }
      _Except
      else{
      }

 if VisualizationActive then stopvisual;
}

window winInteractiveReport 'Параметры отчета';
Screen scrInteractiveReport;
  show at (,,, 3);
  Fields
    _needPodr : NoProtect;
    _dBeg    : NoProtect, {Font={BackColor=if(_dBeg = date(0,0,0),ColorNeed,0)}};
    add_day(_dBeg,30) : skip;
<<'Внешняя потребность на основании плана снабжения'
  [.] -в разрезе подразделений`
  Период с .@@@@@@@@@@ по .@@@@@@@@@@
>>
end;
browse brtHead ('',,sci1Esc);
 show at(,4,30,10);
table tMcOrgPodr;
fields
  Katmc.barkod  'ТМЦ','баркод' headerAlign = centered:protect,[4];
  Katmc.name    'ТМЦ','наименование' headerAlign = centered:protect,[4];
  KatOrg.name      'Изготовитель'    headerAlign = centered:protect,[4];
  KatPodr.name     'Потребитель'     headerAlign = centered:protect,[4];
//  Model.name       'Модель'          headerAlign = centered:protect,[4];
end;

Browse brPlanValue ('',,sci1Esc);
Show at (31,4,,10);//  alwaysShowhScroll ;//excelColumns, ,manualHScroll
Table tMcOrgPodrPlanKol;
Fields
  valueday0  'Поле 0' :[10],Protect,noDel,noAutoSize;
  valueday1  'Поле 1' :[10],Protect,noDel,noAutoSize;
  valueday2  'Поле 2' :[10],Protect,noDel,noAutoSize;
  valueday3  'Поле 3' :[10],Protect,noDel,noAutoSize;
  valueday4  'Поле 4' :[10],Protect,noDel,noAutoSize;
  valueday5  'Поле 5' :[10],Protect,noDel,noAutoSize;
  valueday6  'Поле 6' :[10],Protect,noDel,noAutoSize;
  valueday7  'Поле 7' :[10],Protect,noDel,noAutoSize;
  valueday8  'Поле 8' :[10],Protect,noDel,noAutoSize;
  valueday9  'Поле 9' :[10],Protect,noDel,noAutoSize;
end;// Browse brPremR#(wNum)
/*
browse brtMcOrgPodrClaim ('',,sci1Esc);
 show at(,11,30,);
table tMcOrgPodrClaim;
fields
  tMcOrgPodrClaim.ZakazNumber 'Заказ','номер' headerAlign = centered:protect,[4];
  tMcOrgPodrClaim.zakazDate   'Заказ','дата'   headerAlign = centered:protect,[4];
  tMcOrgPodrClaim.KolZakaz    'Заказ','кол-во'     headerAlign = centered:protect,[4];
  KatPodr_cllaim.name         'Потребитель'     headerAlign = centered:protect,[4];
end;
*/
end;
windowevent winInteractiveReport ;
cminit:{
  filltmpTable;
}
end;
/*
function getnameColumnByDate(_date : date) : string; cacheable;{
// первые 4 месяца по дням, потом по неделям, а с 10 месяца по месяцам
  var _BegDateWeeks  : date = add_months(to_date(01, month(_dBeg), year(_dateB)), 4);
  var _BegDateMonths : date = add_months(to_date(01, month(_dateB), year(_dateB)), 9);

  if _date < _BegDateWeeks {
    result := datetostr(_date,'DD.MM.YY');
    exit;
  }
  if _date < _BegDateMonths {
    result := 'КН'+String((CalcDaysBetweenDates(_BegDateWeeks, _date, false) -1) div 7  + 16);
    exit;
  }
 result := 'М'+String(months_between(_BegDateMonths, _date)+10);
}
*/
/*
procedure fill_tDateNameColumn;{
 delete all tDateColumnsNpp;
 delete all tDateNameColumn;

 if _dateB > _dateE exit;

 var _date : date = _dateB;
  do {
      insert tDateNameColumn set
           tDateNameColumn.DateColumn := _date
         , tDateNameColumn.NameColumn := getnameColumnByDate(_date)
       ;
        if getfirst tDateColumnsNpp where ((getnameColumnByDate(_date) == tDateColumnsNpp.NameColumn)) <> tsOK {
           insert tDateColumnsNpp set
             tDateColumnsNpp.npp        := recordsintable(tntDateColumnsNpp) + 9 + 1
           , tDateColumnsNpp.NameColumn := getnameColumnByDate(_date)
         ;
        }
    _date := Add_Day(_date,1);
  } while _date < _dateE
}

function getcolumnnpp(_date : date) : longint; cacheable; {
  result := 0;
  if getfirst tDateNameColumn where ((_date == tDateNameColumn.DateColumn)) = tsOK
  if getfirst tDateColumnsNpp where ((tDateNameColumn.NameColumn == tDateColumnsNpp.NameColumn)) = tsOK
  result := tDateColumnsNpp.npp;
}
*/

procedure run(__cMnPlan : comp); {
 set _cMnPlan := __cMnPlan;
 set _dBeg := mnplan.startdate;
 if getfirst MnPlan <> tsOK exit;
 if RunWindowModal(winInteractiveReport) != cmDefault exit;
 if VisualizationActive then stopvisual;
}


handleevent
cminit:{
}
cmOnVipUnload:{
  DoneMarker(fMarkermc,'');
  DoneMarker(fMarkerOrg,'');
  DoneMarker(fMarkerkodplan,'');
}
 cmcheckfield: {
   case curfield of
   #_needPodr : {
     popbounds(tbbyPodr);
      var _cmc : comp = 0h;
     if isvalidall(tntMcOrgPodr) then {
        _cmc := tMcOrgPodr.cmc;
      }
     filltmpTable;
     if _needPodr = 1 then addBounds(tbbyPodr);

     if getfirst tMcOrgPodr where ((_cmc == tMcOrgPodr.cmc)) = tsOK { }
     if getfirst tMcOrgPodrClaim = tsOK { }
     rereadrecord;
     rescanpanel(tntMcOrgPodr);
     rescanpanel(tntMcOrgPodrClaim);
   }
   #_dBeg : {
     popbounds(tbbyPodr);
      var _cmc : comp = 0h;
     if isvalidall(tntMcOrgPodr) then {
        _cmc := tMcOrgPodr.cmc;
      }
     filltmpTable;
     if _needPodr = 1 then addBounds(tbbyPodr);

     if getfirst tMcOrgPodr where ((_cmc == tMcOrgPodr.cmc)) = tsOK { }
     if getfirst tMcOrgPodrClaim = tsOK { }
     rereadrecord;
     rescanpanel(tntMcOrgPodr);
     rescanpanel(tntMcOrgPodrClaim);

   }
   end;
 }
/*
cmpick:{
  case curfield of
  #_fmc      : {
      if runwindowmodal(wintBRMC) = cmDefault {
        pMarkerMC.ExportTo(fMarkermc);
        _fmc := 'Выбрано '+string(getmarkercount(fMarkermc));
      }
    }
  #_forg     : {
      if runwindowmodal(wintBROrg) = cmDefault {
        pMarkerOrg.ExportTo(fMarkerOrg);
        _forg := 'Выбрано '+string(getmarkercount(fMarkerOrg));
      }

    }
  #_fkodplan : {
      if runwindowmodal(wintkodplan) = cmDefault {
        pMarkerkodplan.ExportTo(fMarkerkodplan);
        _fkodplan := 'Выбрано '+string(getmarkercount(fMarkerkodplan));
      }
    }
  end;
  rereadrecord;
}
cmdelonprotect:{
  case curfield of
  #_fmc      : {
      _fmc      := '--все--';
      clearmarker(fMarkermc);
    }
  #_forg     : {
      _forg     := '--все--';
      clearmarker(fMarkerOrg);
    }
  #_fkodplan : {
      _fkodplan := '--все--';
      clearmarker(fMarkerkodplan);
    }
  end;
  rereadrecord;
}
*/
end;
end.
