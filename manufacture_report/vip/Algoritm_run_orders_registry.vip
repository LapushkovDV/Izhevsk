/*************************************************************************************************\

  Наименование:
  Контур/Модуль:
  Примечание:
  Вид работы  |Номер           |Дата    |Исполнитель              |Проект
  -----------------------------------------------------------------------------------------------
\*************************************************************************************************/
#include Algor.vih
#include orders_registry.vih

#component "M_MnPlan"
//***********************************
VipInterface Algoritm_run_orders_registry Implements oAlgoritm_Sys #Licensed_Free;
//***********************************
#doc
Запуск отчета о внешней потребности на основании плана снабжения
#end

Interface Algoritm_run_orders_registry;

Create view
;
//Номер системного алгоритма
Function GetNum: Word; {
  Result := 6104;
} //Function GetNum: Word;

Function GetName: String; {
  Result := 'Запуск отчета Реестр заказов';
}; //Function GetName: String;

Function GetMemo(st: oSteckCommonString): Boolean; {
  Result := True;
  st.Push(GetName);
  st.Push('Запуск отчета Реестр заказов');
}; //Function GetMemo(st: oSteckCommonString): Boolean;

Function GetNameInter: String; {
  Result := 'Algoritm_run_orders_registry';
} //Function GetNameInter: String;

Function GetNameInterPr: String; {
  Result := 'Algoritm_run_orders_registry_Setup';
} //Function GetNameInterPr: String;

Function InitInter(Var pt: TRecAcc): Boolean; {
  #__UNUSED__(pt)
  Result := True;
} //Function InitInter(Var pt: TRecAcc): Boolean;


//Запуск алгоритма
Function RunInter(wflag: Word; Var pt: TRecAcc): Boolean;{
  #__UNUSED__(wflag,pt)
 var iorders_registry : orders_registry;
 iorders_registry.printreport(pt.cMnPlan, 'EXCEL');
 result := True;
} //Function RunInter(wflag: Word; Var pt: TRecAcc): Boolean;

End.
